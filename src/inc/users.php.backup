<?php
/**
 * Server Management Framework
 * 
 * @author Teris
 * @version 3.2.0
 */
if (!isset($db)) {
    require_once dirname(__DIR__) . '/core/DatabaseManager.php';
    $db = DatabaseManager::getInstance();
}

// TODO: E-Mail-Template-System ist jetzt über EmailTemplateManager verfügbar
// TODO: Alle alten E-Mail-Funktionen werden durch Template-System ersetzt

// ServiceManager initialisieren
$serviceManager = new ServiceManager();

// AJAX-Request Behandlung (wird über index.php aufgerufen)
if (isset($_POST['action']) && in_array($_POST['action'], ['get_user_data', 'get_user_details', 'get_user_system_links', 'get_customer_details', 'edit_system_user', 'delete_system_user', 'edit_customer', 'create_customer', 'get_customers', 'create_system_user', 'edit_user', 'delete_customer', 'delete_user'])) {
    header('Content-Type: application/json');
    
    try {
        $action = $_POST['action'] ?? '';
        
        // Debug-Logging
        error_log("Users.php AJAX Action: " . $action);
        
        switch ($action) {
            case 'get_user_data':
                handleGetUserData($db);
                break;
            case 'get_user_details':
                handleGetUserDetails($db);
                break;
            case 'get_user_system_links':
                handleGetUserSystemLinks($db, $serviceManager);
                break;
            case 'get_customer_details':
                handleGetCustomerDetails($db);
                break;
            case 'edit_system_user':
                handleEditSystemUser($db, $serviceManager);
                break;
            case 'delete_system_user':
                handleDeleteSystemUser($db, $serviceManager);
                break;
            case 'edit_customer':
                handleEditCustomer($db);
                break;
            case 'create_customer':
                handleCreateCustomer($db);
                break;
            case 'get_customers':
                handleGetCustomers($db);
                break;
            case 'create_system_user':
                handleCreateSystemUser($db, $serviceManager);
                break;
            case 'edit_user':
                handleEditUser($db);
                break;
            case 'delete_customer':
                handleDeleteCustomer($db);
                break;
            case 'delete_user':
                handleDeleteUser($serviceManager, $db);
                break;
            default:
                echo json_encode(['success' => false, 'message' => 'Unbekannte Aktion: ' . $action]);
                break;
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler: ' . $e->getMessage()]);
    }
    exit;
}

// AJAX-Handler-Funktionen
function handleGetUserData($db) {
    $userId = (int)($_POST['user_id'] ?? 0);
    
    if ($userId <= 0) {
        echo json_encode(['success' => false, 'message' => 'Ungültige Benutzer-ID']);
        return;
    }
    
    try {
        $stmt = $db->prepare("SELECT * FROM users WHERE id = ?");
        $db->execute($stmt, [$userId]);
        $user = $db->fetch($stmt);
        
        if ($user) {
            echo json_encode(['success' => true, 'data' => $user]);
        } else {
            echo json_encode(['success' => false, 'message' => 'Benutzer nicht gefunden']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Laden der Benutzerdaten: ' . $e->getMessage()]);
    }
}

function handleGetUserDetails($db) {
    $userId = (int)($_POST['user_id'] ?? 0);
    
    if ($userId <= 0) {
        echo json_encode(['success' => false, 'message' => 'Ungültige Benutzer-ID']);
        return;
    }
    
    try {
        $stmt = $db->prepare("SELECT * FROM users WHERE id = ?");
        $db->execute($stmt, [$userId]);
        $user = $db->fetch($stmt);
        
        if ($user) {
            echo json_encode(['success' => true, 'data' => $user]);
        } else {
            echo json_encode(['success' => false, 'message' => 'Benutzer nicht gefunden']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Laden der Benutzerdetails: ' . $e->getMessage()]);
    }
}

function handleGetUserSystemLinks($db, $serviceManager) {
    $userId = (int)($_POST['user_id'] ?? 0);
    
    if ($userId <= 0) {
        echo json_encode(['success' => false, 'message' => 'Ungültige Benutzer-ID']);
        return;
    }
    
    try {
        // Benutzerdaten abrufen
        $stmt = $db->prepare("SELECT username, email FROM users WHERE id = ?");
        $db->execute($stmt, [$userId]);
        $user = $db->fetch($stmt);
        
        if (!$user) {
            echo json_encode(['success' => false, 'message' => 'Benutzer nicht gefunden']);
            return;
        }
        
        $systemLinks = [];
        
        // OGP Benutzer suchen
        try {
            $ogpUsers = $serviceManager->getOGPUsers();
            foreach ($ogpUsers as $ogpUser) {
                if ($ogpUser['users_email'] === $user['email'] || $ogpUser['users_login'] === $user['username']) {
                    $systemLinks['ogp'] = $ogpUser['users_login'];
                    break;
                }
            }
        } catch (Exception $e) {
            // OGP nicht verfügbar
        }
        
        // Proxmox Benutzer suchen
        try {
            $proxmoxUsers = $serviceManager->getProxmoxUsers();
            foreach ($proxmoxUsers as $proxmoxUser) {
                if ($proxmoxUser['userid'] === $user['username']) {
                    $systemLinks['proxmox'] = $proxmoxUser['userid'];
                    break;
                }
            }
        } catch (Exception $e) {
            // Proxmox nicht verfügbar
        }
        
        // ISPConfig Benutzer suchen
        try {
            $ispconfigUsers = $serviceManager->getISPConfigUsers();
            foreach ($ispconfigUsers as $ispconfigUser) {
                if ($ispconfigUser['username'] === $user['username'] || $ispconfigUser['email'] === $user['email']) {
                    $systemLinks['ispconfig'] = $ispconfigUser['username'];
                    break;
                }
            }
        } catch (Exception $e) {
            // ISPConfig nicht verfügbar
        }
        
        echo json_encode(['success' => true, 'data' => $systemLinks]);
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Laden der System-Verknüpfungen: ' . $e->getMessage()]);
    }
}

function handleGetCustomerDetails($db) {
    $customerId = (int)($_POST['customer_id'] ?? 0);
    
    if ($customerId <= 0) {
        echo json_encode(['success' => false, 'message' => 'Ungültige Kunden-ID']);
        return;
    }
    
    try {
        $stmt = $db->prepare("SELECT * FROM customers WHERE id = ?");
        $db->execute($stmt, [$customerId]);
        $customer = $db->fetch($stmt);
        
        if ($customer) {
            echo json_encode(['success' => true, 'data' => $customer]);
        } else {
            echo json_encode(['success' => false, 'message' => 'Kunde nicht gefunden']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Laden der Kundendetails: ' . $e->getMessage()]);
    }
}

function handleEditSystemUser($db, $serviceManager) {
    $systemType = $_POST['system_type'] ?? '';
    $systemUserId = $_POST['system_user_id'] ?? '';
    $email = $_POST['email'] ?? '';
    $username = $_POST['username'] ?? '';
    $expires = $_POST['expires'] ?? '';
    
    if (empty($systemType) || empty($systemUserId)) {
        echo json_encode(['success' => false, 'message' => 'Fehlende Parameter']);
        return;
    }
    
    try {
        $result = false;
        
        switch ($systemType) {
            case 'ogp':
                $result = $serviceManager->editOGPUser($systemUserId, $email, $username, $expires);
                break;
            case 'proxmox':
                $result = $serviceManager->editProxmoxUser($systemUserId, $email, $username);
                break;
            case 'ispconfig':
                $result = $serviceManager->editISPConfigUser($systemUserId, $email, $username);
                break;
            default:
                echo json_encode(['success' => false, 'message' => 'Unbekanntes System: ' . $systemType]);
                return;
        }
        
        if ($result) {
            echo json_encode(['success' => true, 'message' => 'Benutzer erfolgreich aktualisiert']);
        } else {
            echo json_encode(['success' => false, 'message' => 'Fehler beim Aktualisieren des Benutzers']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler: ' . $e->getMessage()]);
    }
}

function handleDeleteSystemUser($db, $serviceManager) {
    $systemType = $_POST['system_type'] ?? '';
    $systemUserId = $_POST['system_user_id'] ?? '';
    
    if (empty($systemType) || empty($systemUserId)) {
        echo json_encode(['success' => false, 'message' => 'Fehlende Parameter']);
        return;
    }
    
    try {
        $result = false;
        
        switch ($systemType) {
            case 'ogp':
                $result = $serviceManager->deleteOGPUser($systemUserId);
                break;
            case 'proxmox':
                $result = $serviceManager->deleteProxmoxUser($systemUserId);
                break;
            case 'ispconfig':
                $result = $serviceManager->deleteISPConfigUser($systemUserId);
                break;
            default:
                echo json_encode(['success' => false, 'message' => 'Unbekanntes System: ' . $systemType]);
                return;
        }
        
        if ($result) {
            echo json_encode(['success' => true, 'message' => 'Benutzer erfolgreich gelöscht']);
        } else {
            echo json_encode(['success' => false, 'message' => 'Fehler beim Löschen des Benutzers']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler: ' . $e->getMessage()]);
    }
}

function handleEditCustomer($db) {
    $customerId = (int)($_POST['customer_id'] ?? 0);
    
    if ($customerId <= 0) {
        echo json_encode(['success' => false, 'message' => 'Ungültige Kunden-ID']);
        return;
    }
    
    try {
        // Grundlegende Informationen
        $firstName = $_POST['first_name'] ?? '';
        $lastName = $_POST['last_name'] ?? '';
        $fullName = $_POST['full_name'] ?? '';
        $email = $_POST['email'] ?? '';
        $company = $_POST['company'] ?? '';
        $phone = $_POST['phone'] ?? '';
        
        // Adressinformationen
        $address = $_POST['address'] ?? '';
        $city = $_POST['city'] ?? '';
        $postalCode = $_POST['postal_code'] ?? '';
        $country = $_POST['country'] ?? '';
        
        // Status
        $status = $_POST['status'] ?? 'pending';
        
        // Validierung
        if (empty($firstName) || empty($lastName) || empty($email)) {
            echo json_encode(['success' => false, 'message' => 'Vorname, Nachname und E-Mail sind erforderlich']);
            return;
        }
        
        // SQL-Update vorbereiten
        $updateFields = [];
        $params = [];
        
        $updateFields[] = "first_name = ?";
        $params[] = $firstName;
        
        $updateFields[] = "last_name = ?";
        $params[] = $lastName;
        
        $updateFields[] = "full_name = ?";
        $params[] = $fullName;
        
        $updateFields[] = "email = ?";
        $params[] = $email;
        
        $updateFields[] = "company = ?";
        $params[] = $company;
        
        $updateFields[] = "phone = ?";
        $params[] = $phone;
        
        $updateFields[] = "address = ?";
        $params[] = $address;
        
        $updateFields[] = "city = ?";
        $params[] = $city;
        
        $updateFields[] = "postal_code = ?";
        $params[] = $postalCode;
        
        $updateFields[] = "country = ?";
        $params[] = $country;
        
        $updateFields[] = "status = ?";
        $params[] = $status;
        
        // Passwort aktualisieren, falls angegeben
        if (!empty($_POST['password'])) {
            $passwordHash = password_hash($_POST['password'], PASSWORD_DEFAULT);
            $updateFields[] = "password_hash = ?";
            $params[] = $passwordHash;
        }
        
        $updateFields[] = "updated_at = NOW()";
        
        $params[] = $customerId;
        
        $sql = "UPDATE customers SET " . implode(", ", $updateFields) . " WHERE id = ?";
        
        $stmt = $db->prepare($sql);
        $result = $db->execute($stmt, $params);
        
        if ($result) {
            echo json_encode(['success' => true, 'message' => 'Kunde erfolgreich aktualisiert']);
        } else {
            echo json_encode(['success' => false, 'message' => 'Fehler beim Aktualisieren des Kunden']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Bearbeiten des Kunden: ' . $e->getMessage()]);
    }
}

function handleCreateCustomer($db) {
    try {
        // Grundlegende Informationen
        $firstName = $_POST['first_name'] ?? '';
        $lastName = $_POST['last_name'] ?? '';
        $email = $_POST['email'] ?? '';
        $company = $_POST['company'] ?? '';
        $phone = $_POST['phone'] ?? '';
        
        // Adressinformationen
        $address = $_POST['address'] ?? '';
        $city = $_POST['city'] ?? '';
        $postalCode = $_POST['postal_code'] ?? '';
        $country = $_POST['country'] ?? '';
        
        // Sicherheit und Status
        $password = $_POST['password'] ?? '';
        $passwordConfirm = $_POST['password_confirm'] ?? '';
        $status = $_POST['status'] ?? 'pending';
        $emailVerified = isset($_POST['email_verified']) && $_POST['email_verified'] === '1';
        
        // Validierung
        if (empty($firstName) || empty($lastName) || empty($email) || empty($password)) {
            echo json_encode(['success' => false, 'message' => 'Vorname, Nachname, E-Mail und Passwort sind erforderlich']);
            return;
        }
        
        if ($password !== $passwordConfirm) {
            echo json_encode(['success' => false, 'message' => 'Passwörter stimmen nicht überein']);
            return;
        }
        
        if (strlen($password) < 8) {
            echo json_encode(['success' => false, 'message' => 'Passwort muss mindestens 8 Zeichen lang sein']);
            return;
        }
        
        // E-Mail-Existenz prüfen
        $stmt = $db->prepare("SELECT id FROM customers WHERE email = ?");
        $db->execute($stmt, [$email]);
        if ($db->fetch($stmt)) {
            echo json_encode(['success' => false, 'message' => 'E-Mail-Adresse bereits vorhanden']);
            return;
        }
        
        // Passwort hashen
        $passwordHash = password_hash($password, PASSWORD_DEFAULT);
        
        // SQL-Insert vorbereiten
        $sql = "INSERT INTO customers (first_name, last_name, full_name, email, password_hash, company, phone, address, city, postal_code, country, status, email_verified_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
        
        $emailVerifiedAt = $emailVerified ? date('Y-m-d H:i:s') : null;
        $fullName = $firstName . ' ' . $lastName; // Vollständiger Name generieren
        
        $stmt = $db->prepare($sql);
        $result = $db->execute($stmt, [
            $firstName,
            $lastName,
            $fullName,
            $email,
            $passwordHash,
            $company,
            $phone,
            $address,
            $city,
            $postalCode,
            $country,
            $status,
            $emailVerifiedAt
        ]);
        
        if ($result) {
            $customerId = $db->lastInsertId();
            
            // TODO: E-Mail senden - ausschließlich über Template-System
            $emailTemplateManager = EmailTemplateManager::getInstance();
            if ($emailVerified) {
                // Kunde ist sofort aktiviert - Willkommens-E-Mail senden
                $emailTemplateManager->sendCustomerWelcomeEmail($email, $firstName, $password);
            } else {
                // Kunde muss E-Mail verifizieren - Verifikations-E-Mail senden
                $emailTemplateManager->sendCustomerVerificationEmail($email, $firstName, $customerId, $password);
            }
            
            // Aktivitätslog
            $db->logAction(
                'Customer Created',
                "Neuer Kunde erstellt: {$firstName} {$lastName} ({$email})",
                'success'
            );
            
            echo json_encode([
                'success' => true, 
                'message' => 'Kunde erfolgreich erstellt' . ($emailVerified ? ' und E-Mail gesendet' : ' - Verifikations-E-Mail gesendet'),
                'customer_id' => $customerId
            ]);
        } else {
            echo json_encode(['success' => false, 'message' => 'Fehler beim Erstellen des Kunden']);
        }
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Erstellen des Kunden: ' . $e->getMessage()]);
    }
}

/**
 * Willkommens-E-Mail für sofort aktivierte Kunden senden
 */
function sendCustomerWelcomeEmail($email, $firstName, $password) {
    try {
        $to = $email;
        $subject = "Willkommen bei " . Config::FRONTPANEL_SITE_NAME . "!";
        
        $loginUrl = "https://" . $_SERVER['HTTP_HOST'] . "/public/login.php";
        
        $message = "
        <html>
        <head>
            <title>Willkommen bei " . Config::FRONTPANEL_SITE_NAME . "</title>
        </head>
        <body>
            <h2>Willkommen bei " . Config::FRONTPANEL_SITE_NAME . "!</h2>
            <p>Hallo {$firstName},</p>
            <p>Ihr Konto wurde erfolgreich erstellt und ist sofort aktiv. Sie können sich jetzt in unserem Kundenportal anmelden.</p>
            
            <div style='background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;'>
                <h3>Ihre Anmeldedaten:</h3>
                <p><strong>E-Mail:</strong> {$email}</p>
                <p><strong>Passwort:</strong> {$password}</p>
            </div>
            
            <div style='text-align: center; margin: 30px 0;'>
                <a href='{$loginUrl}' 
                   style='background: #007bff; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; display: inline-block;'>
                    Zum Kundenportal anmelden
                </a>
            </div>
            
            <p>Falls Sie Fragen haben, können Sie sich gerne an unseren Support wenden.</p>
            
            <p>Mit freundlichen Grüßen<br>
            Ihr " . Config::FRONTPANEL_SITE_NAME . " Team</p>
        </body>
        </html>
        ";
        
        $headers = [
            'MIME-Version: 1.0',
            'Content-type: text/html; charset=utf-8',
            'From: ' . Config::FRONTPANEL_SYSTEM_EMAIL,
            'Reply-To: ' . Config::FRONTPANEL_SUPPORT_EMAIL,
            'X-Mailer: PHP/' . phpversion()
        ];
        
        $mailResult = mail($to, $subject, $message, implode("\r\n", $headers));
        
        if ($mailResult) {
            error_log("Customer welcome email sent successfully to: " . $email);
        } else {
            error_log("Failed to send customer welcome email to: " . $email);
        }
        
    } catch (Exception $e) {
        error_log("Failed to send customer welcome email: " . $e->getMessage());
    }
}

/**
 * Verifikations-E-Mail für Kunden senden
 */
function sendCustomerVerificationEmail($email, $firstName, $customerId, $password) {
    try {
        $verificationToken = bin2hex(random_bytes(32));
        $expires = date('Y-m-d H:i:s', strtotime('+24 hours'));
        
        // Token in Datenbank speichern
        $db = Database::getInstance();
        $stmt = $db->prepare("INSERT INTO customer_verification_tokens (customer_id, token, expires_at) VALUES (?, ?, ?)");
        $stmt->execute([$customerId, $verificationToken, $expires]);
        
        $to = $email;
        $subject = "E-Mail-Adresse bestätigen - " . Config::FRONTPANEL_SITE_NAME;
        
        $verificationLink = "https://" . $_SERVER['HTTP_HOST'] . "/public/verify.php?token=" . $verificationToken;
        
        $message = "
        <html>
        <head>
            <title>E-Mail-Adresse bestätigen</title>
        </head>
        <body>
            <h2>Willkommen bei " . Config::FRONTPANEL_SITE_NAME . "!</h2>
            <p>Hallo {$firstName},</p>
            <p>vielen Dank für Ihre Registrierung. Um Ihr Konto zu aktivieren, bestätigen Sie bitte Ihre E-Mail-Adresse.</p>
            <div style='background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;'>
                <h3>Ihre Anmeldedaten:</h3>
                <p><strong>E-Mail:</strong> {$email}</p>
                <p><strong>Passwort:</strong> {$password}</p>
            </div>
            <div style='text-align: center; margin: 30px 0;'>
                <a href='{$verificationLink}' 
                   style='background: #007bff; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; display: inline-block;'>
                    E-Mail-Adresse bestätigen
                </a>
            </div>
            
            <p>Falls der Button nicht funktioniert, kopieren Sie diesen Link in Ihren Browser:</p>
            <p style='word-break: break-all; color: #666;'>{$verificationLink}</p>
            
            <p>Dieser Link ist 24 Stunden gültig.</p>
            
            <p>Mit freundlichen Grüßen<br>
            Ihr " . Config::FRONTPANEL_SITE_NAME . " Team</p>
        </body>
        </html>
        ";
        
        $headers = [
            'MIME-Version: 1.0',
            'Content-type: text/html; charset=utf-8',
            'From: ' . Config::FRONTPANEL_SYSTEM_EMAIL,
            'Reply-To: ' . Config::FRONTPANEL_SUPPORT_EMAIL,
            'X-Mailer: PHP/' . phpversion()
        ];
        
        $mailResult = mail($to, $subject, $message, implode("\r\n", $headers));
        
        if ($mailResult) {
            error_log("Customer verification email sent successfully to: " . $email);
        } else {
            error_log("Failed to send customer verification email to: " . $email);
        }
        
    } catch (Exception $e) {
        error_log("Failed to send customer verification email: " . $e->getMessage());
    }
}

/**
 * E-Mail für Backend-Benutzer senden
 */
function sendUserWelcomeEmail($email, $firstName, $username, $password) {
    try {
        $to = $email;
        $subject = "Ihre Backend-Anmeldedaten - " . Config::FRONTPANEL_SITE_NAME;
        
        $loginUrl = "https://" . $_SERVER['HTTP_HOST'] . "/src/";
        
        $message = "
        <html>
        <head>
            <title>Backend-Anmeldedaten</title>
        </head>
        <body>
            <h2>Willkommen im Backend von " . Config::FRONTPANEL_SITE_NAME . "!</h2>
            <p>Hallo {$firstName},</p>
            <p>Ihr Backend-Benutzerkonto wurde erfolgreich erstellt. Sie können sich jetzt im Admin-Bereich anmelden.</p>
            
            <div style='background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;'>
                <h3>Ihre Anmeldedaten:</h3>
                <p><strong>Benutzername:</strong> {$username}</p>
                <p><strong>E-Mail:</strong> {$email}</p>
                <p><strong>Passwort:</strong> {$password}</p>
            </div>
            
            <div style='text-align: center; margin: 30px 0;'>
                <a href='{$loginUrl}' 
                   style='background: #007bff; color: white; padding: 15px 30px; text-decoration: none; border-radius: 8px; display: inline-block;'>
                    Zum Backend anmelden
                </a>
            </div>
            
            <p>Falls Sie Fragen haben, können Sie sich gerne an den Administrator wenden.</p>
            
            <p>Mit freundlichen Grüßen<br>
            Ihr " . Config::FRONTPANEL_SITE_NAME . " Team</p>
        </body>
        </html>
        ";
        
        $headers = [
            'MIME-Version: 1.0',
            'Content-type: text/html; charset=utf-8',
            'From: ' . Config::FRONTPANEL_SYSTEM_EMAIL,
            'Reply-To: ' . Config::FRONTPANEL_SUPPORT_EMAIL,
            'X-Mailer: PHP/' . phpversion()
        ];
        
        $mailResult = mail($to, $subject, $message, implode("\r\n", $headers));
        
        if ($mailResult) {
            error_log("User welcome email sent successfully to: " . $email);
        } else {
            error_log("Failed to send user welcome email to: " . $email);
        }
        
    } catch (Exception $e) {
        error_log("Failed to send user welcome email: " . $e->getMessage());
    }
}

function handleGetCustomers($db) {
    try {
        $stmt = $db->query("SELECT * FROM customers ORDER BY created_at DESC");
        $customers = $db->fetchAll($stmt);
        
        echo json_encode(['success' => true, 'data' => $customers]);
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Laden der Kunden: ' . $e->getMessage()]);
    }
}

// Kunden abrufen
try {
    $customers = [];
    $stmt = $db->query("SELECT * FROM customers ORDER BY created_at DESC");
    $customers = $db->fetchAll($stmt);
} catch (Exception $e) {
    $customers = [];
    error_log("Fehler beim Laden der Kunden: " . $e->getMessage());
}

// Aktionsverarbeitung für Backend-Benutzer-Erstellung
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'create_system_user') {
    handleCreateSystemUser($serviceManager, $db);
}

// Aktionsverarbeitung für Kundenaktivierung
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['action']) && $_POST['action'] === 'activate_customer') {
    $customerId = (int)($_POST['customer_id'] ?? 0);
    
    if ($customerId > 0) {
        try {
            // Kundendaten abrufen
            $stmt = $db->prepare("SELECT * FROM customers WHERE id = ? AND status = 'pending'");
            $stmt->execute([$customerId]);
            $customer = $stmt->fetch(PDO::FETCH_ASSOC);
            
            if ($customer) {
                // Konto aktivieren
                $stmt = $db->prepare("UPDATE customers SET status = 'active', email_verified_at = NOW(), updated_at = NOW() WHERE id = ?");
                $result = $stmt->execute([$customerId]);
                
                if ($result) {
                    // Benutzerkonten in allen Systemen erstellen
                    try {
                        // Benutzername aus E-Mail generieren
                        $username = strtolower(explode('@', $customer['email'])[0]);
                        
                        // Neues Passwort generieren
                        $newPassword = bin2hex(random_bytes(8)); // 16 Zeichen
                        
                        // Passwort in der Datenbank aktualisieren
                        $passwordHash = password_hash($newPassword, PASSWORD_DEFAULT);
                        $stmt = $db->prepare("UPDATE customers SET password_hash = ? WHERE id = ?");
                        $stmt->execute([$passwordHash, $customerId]);
                        
                        // Benutzer in allen Systemen erstellen
                        $systemPasswords = [
                            'ispconfig' => $newPassword,
                            'ogp' => $newPassword,
                            'proxmox' => $newPassword,
                        ];
                        $creationResult = $serviceManager->createUserInAllSystems(
                            $username,
                            $systemPasswords,
                            $customer['first_name'],
                            $customer['last_name'],
                            [
                                'email' => $customer['email'],
                                'company' => $customer['company'] ?? '',
                                'phone' => $customer['phone'] ?? ''
                            ]
                        );
                        
                        if ($creationResult['success']) {
                            // Erfolgreiche Systemerstellung loggen
                            $db->logAction(
                                'Admin Customer Activation',
                                "Kunde {$customer['email']} erfolgreich aktiviert und in allen Systemen angelegt: " . implode(', ', array_keys($creationResult['results'])),
                                'success'
                            );
                            
                            // E-Mail mit Anmeldedaten senden
                            sendSystemCredentialsEmail($customer['email'], $customer['first_name'], $username, $newPassword, $creationResult['results']);
                            
                            $_SESSION['success_message'] = "Kunde {$customer['email']} erfolgreich aktiviert und Systemkonten angelegt.";
                        } else {
                            $_SESSION['warning_message'] = "Kunde aktiviert, aber Fehler beim Anlegen der Systemkonten: " . json_encode($creationResult['errors']);
                            
                            // Fehler loggen
                            $db->logAction(
                                'Admin Customer Activation',
                                "Kunde {$customer['email']} aktiviert, aber Fehler bei Systemkonten: " . json_encode($creationResult['errors']),
                                'error'
                            );
                        }
                        
                    } catch (Exception $e) {
                        $_SESSION['warning_message'] = "Kunde aktiviert, aber Fehler beim Anlegen der Systemkonten: " . $e->getMessage();
                        error_log("System User Creation Error: " . $e->getMessage());
                        
                        // Fehler loggen
                        $db->logAction(
                            'Admin Customer Activation',
                            "Exception beim Anlegen der Systemkonten für Kunde {$customer['email']}: " . $e->getMessage(),
                            'error'
                        );
                    }
                    
                } else {
                    $_SESSION['error_message'] = "Fehler bei der Kontoaktivierung.";
                }
            } else {
                $_SESSION['error_message'] = "Kunde nicht gefunden oder bereits aktiviert.";
            }
        } catch (Exception $e) {
            $_SESSION['error_message'] = "Fehler: " . $e->getMessage();
            error_log("Customer Activation Error: " . $e->getMessage());
        }
        
        // Weiterleitung zur gleichen Seite
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
    }
}


// Benutzerdaten abrufen - Verwende direkte Datenbankabfrage statt adminCore
try {
    $adminUsers = [];
    $stmt = $db->query("SELECT * FROM users ORDER BY username");
    $adminUsers = $db->fetchAll($stmt);
} catch (Exception $e) {
    $adminUsers = [];
    error_log("Fehler beim Laden der Admin-Benutzer: " . $e->getMessage());
}

try {
    $customersUsers = [];
    $stmt = $db->query("SELECT * FROM customers ORDER BY id");
    $customersUsers = $db->fetchAll($stmt);
} catch (Exception $e) {
    $customersUsers = [];
    error_log("Fehler beim Laden der Admin-Benutzer: " . $e->getMessage());
}

try {
    $ogpUsers = $serviceManager->getOGPUsers();
} catch (Exception $e) {
    $ogpUsers = [];
    error_log("Fehler beim Laden der OGP Benutzer: " . $e->getMessage());
}

try {
    $proxmoxUsers = $serviceManager->getProxmoxUsers();
} catch (Exception $e) {
    $proxmoxUsers = [];
    error_log("Fehler beim Laden der Proxmox Benutzer: " . $e->getMessage());
}

try {
    $ispconfigClients = $serviceManager->getISPConfigClients();
} catch (Exception $e) {
    $ispconfigClients = [];
    error_log("Fehler beim Laden der ISPConfig Benutzer: " . $e->getMessage());
}

// Fehlerbehandlung für API-Aufrufe
$apiErrors = [];

if (!is_array($ogpUsers)) {
    $apiErrors['ogp'] = $ogpUsers;
    $ogpUsers = [];
}
if (!is_array($proxmoxUsers)) {
    $apiErrors['proxmox'] = $proxmoxUsers;
    $proxmoxUsers = [];
}
if (!is_array($ispconfigClients)) {
    $apiErrors['ispconfig'] = $ispconfigClients;
    $ispconfigClients = [];
}
function verifyUserInSystem($serviceManager, $system, $username) {
    try {
        switch ($system) {
            case 'ogp':
                $users = $serviceManager->getOGPUsers();
                if (is_array($users) && isset($users['message'])) {
                    foreach ($users['message'] as $user) {
                        if (($user['users_login'] ?? '') === $username || ($user['username'] ?? '') === $username) {
                            return true;
                        }
                    }
                }
                break;
                
            case 'proxmox':
                $users = $serviceManager->getProxmoxUsers();
                if (is_array($users) && isset($users['data'])) {
                    foreach ($users['data'] as $user) {
                        if (($user['userid'] ?? '') === $username || ($user['username'] ?? '') === $username) {
                            return true;
                        }
                    }
                }
                break;
                
            case 'ispconfig':
                $users = $serviceManager->getISPConfigClients();
                if (is_array($users)) {
                    foreach ($users as $user) {
                        if (($user['username'] ?? '') === $username || ($user['name'] ?? '') === $username) {
                            return true;
                        }
                    }
                }
                break;
        }
        
        return false;
    } catch (Exception $e) {
        error_log("Verifikationsfehler in $system: " . $e->getMessage());
        return false;
    }
}

function handleMergeUsers($serviceManager, $db) {
    try {
        $mainUserId = $_POST['main_user_id'];
        $systemUsers = $_POST['system_users'] ?? [];
        
        // Bestehende Benutzer verknüpfen (verwendet user_permissions Tabelle)
        foreach ($systemUsers as $system => $systemUserId) {
            if (!empty($systemUserId)) {
                $stmt = $db->prepare("INSERT INTO user_permissions (user_id, permission_type, resource_id, granted_by, created_at) VALUES (?, ?, ?, ?, NOW()) ON DUPLICATE KEY UPDATE resource_id = ?");
                $db->execute($stmt, [$mainUserId, $system, $systemUserId, $mainUserId, $systemUserId]);
            }
        }
        
        $_SESSION['success_message'] = "Benutzer erfolgreich zusammengeführt!";
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
        
    } catch (Exception $e) {
        $_SESSION['error_message'] = "Fehler beim Zusammenführen: " . $e->getMessage();
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
    }
}

function handleCreateSystemUser($db, $serviceManager) {
    try {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $fullName = $_POST['full_name'];
        $password = $_POST['password'];
        
        // Validierung
        if (empty($username) || empty($email) || empty($fullName) || empty($password)) {
            echo json_encode(['success' => false, 'message' => 'Alle Felder sind erforderlich']);
            return;
        }
        
        // E-Mail-Existenz prüfen
        $stmt = $db->prepare("SELECT id FROM users WHERE email = ?");
        $db->execute($stmt, [$email]);
        if ($db->fetch($stmt)) {
            echo json_encode(['success' => false, 'message' => 'E-Mail-Adresse bereits vorhanden']);
            return;
        }
        
        // Benutzername-Existenz prüfen
        $stmt = $db->prepare("SELECT id FROM users WHERE username = ?");
        $db->execute($stmt, [$username]);
        if ($db->fetch($stmt)) {
            echo json_encode(['success' => false, 'message' => 'Benutzername bereits vorhanden']);
            return;
        }
        
        // Lokalen Benutzer anlegen
        $stmt = $db->prepare("INSERT INTO users (username, email, password_hash, full_name, role, active, created_at) VALUES (?, ?, ?, ?, 'user', 'y', NOW())");
        $passwordHash = password_hash($password, PASSWORD_DEFAULT);
        $db->execute($stmt, [$username, $email, $passwordHash, $fullName]);
        $userId = $db->lastInsertId();
        
        // TODO: E-Mail mit Anmeldedaten senden - ausschließlich über Template-System
        $emailTemplateManager = EmailTemplateManager::getInstance();
        $emailTemplateManager->sendUserWelcomeEmail($email, $fullName, $username, $password);
        
        echo json_encode(['success' => true, 'message' => 'Backend-Benutzer erfolgreich erstellt und E-Mail gesendet!']);
        
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Erstellen des Benutzers: ' . $e->getMessage()]);
    }
}

function handleEditUser($db) {
    try {
        $userId = $_POST['user_id'] ?? '';
        $username = $_POST['username'] ?? '';
        $email = $_POST['email'] ?? '';
        $fullName = $_POST['full_name'] ?? '';
        $role = $_POST['role'] ?? 'user';
        $active = $_POST['active'] ?? 'y';
        $password = $_POST['password'] ?? '';
        
        // Validierung
        if (empty($userId) || empty($username) || empty($email) || empty($fullName)) {
            echo json_encode(['success' => false, 'message' => 'Benutzer-ID, Benutzername, E-Mail und vollständiger Name sind erforderlich']);
            return;
        }
        
        // E-Mail-Existenz prüfen (außer für den aktuellen Benutzer)
        $stmt = $db->prepare("SELECT id FROM users WHERE email = ? AND id != ?");
        $db->execute($stmt, [$email, $userId]);
        if ($db->fetch($stmt)) {
            echo json_encode(['success' => false, 'message' => 'E-Mail-Adresse bereits von einem anderen Benutzer verwendet']);
            return;
        }
        
        // Benutzername-Existenz prüfen (außer für den aktuellen Benutzer)
        $stmt = $db->prepare("SELECT id FROM users WHERE username = ? AND id != ?");
        $db->execute($stmt, [$username, $userId]);
        if ($db->fetch($stmt)) {
            echo json_encode(['success' => false, 'message' => 'Benutzername bereits von einem anderen Benutzer verwendet']);
            return;
        }
        
        // SQL-Update vorbereiten
        if (!empty($password)) {
            // Passwort wird geändert
            $stmt = $db->prepare("UPDATE users SET username = ?, email = ?, full_name = ?, role = ?, active = ?, password_hash = ?, updated_at = NOW() WHERE id = ?");
            $passwordHash = password_hash($password, PASSWORD_DEFAULT);
            $db->execute($stmt, [$username, $email, $fullName, $role, $active, $passwordHash, $userId]);
            
            // System-Verknüpfungen abrufen (für zukünftige Erweiterungen)
            $stmt = $db->prepare("SELECT permission_type, resource_id FROM user_permissions WHERE user_id = ?");
            $db->execute($stmt, [$userId]);
            $permissions = $db->fetchAll($stmt);
            
            // TODO: System-spezifische Passwort-Updates implementieren
            // Aktuell wird nur das lokale Passwort aktualisiert
            if (!empty($permissions)) {
                error_log("Benutzer {$userId} hat System-Verknüpfungen, aber System-Passwort-Updates sind noch nicht implementiert");
            }
        } else {
            // Passwort bleibt unverändert
            $stmt = $db->prepare("UPDATE users SET username = ?, email = ?, full_name = ?, role = ?, active = ?, updated_at = NOW() WHERE id = ?");
            $db->execute($stmt, [$username, $email, $fullName, $role, $active, $userId]);
        }
        
        echo json_encode(['success' => true, 'message' => 'Benutzer erfolgreich aktualisiert']);
        
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Aktualisieren des Benutzers: ' . $e->getMessage()]);
    }
}

function handleDeleteCustomer($db) {
    try {
        $customerId = $_POST['customer_id'] ?? '';
        $deleteFromSystems = $_POST['delete_from_systems'] ?? [];
        
        // Validierung
        if (empty($customerId)) {
            echo json_encode(['success' => false, 'message' => 'Kunden-ID ist erforderlich']);
            return;
        }
        
        if (empty($deleteFromSystems)) {
            echo json_encode(['success' => false, 'message' => 'Bitte wählen Sie mindestens ein System aus']);
            return;
        }
        
        $serviceManager = new ServiceManager();
        $deletedSystems = [];
        $errors = [];
        
        // Kunde aus den ausgewählten Systemen löschen
        foreach ($deleteFromSystems as $system) {
            try {
                switch ($system) {
                    case 'local':
                        // Lokaler Kunde (hartes Löschen)
                        $stmt = $db->prepare("DELETE FROM customers WHERE id = ?");
                        $result = $db->execute($stmt, [$customerId]);
                        if ($result) {
                            $deletedSystems[] = 'Lokaler Kunde (hard delete)';
                        } else {
                            $errors[] = 'Fehler beim Löschen des lokalen Kunden';
                        }
                        break;
                        
                    case 'ogp':
                        // TODO: OGP Kunde löschen implementieren
                        $deletedSystems[] = 'OpenGamePanel (TODO: Implementierung fehlt)';
                        break;
                        
                    case 'proxmox':
                        // TODO: Proxmox Kunde löschen implementieren
                        $deletedSystems[] = 'Proxmox (TODO: Implementierung fehlt)';
                        break;
                        
                    case 'ispconfig':
                        // TODO: ISPConfig Kunde löschen implementieren
                        $deletedSystems[] = 'ISPConfig (TODO: Implementierung fehlt)';
                        break;
                        
                    default:
                        $errors[] = "Unbekanntes System: {$system}";
                        break;
                }
            } catch (Exception $e) {
                $errors[] = "Fehler beim Löschen aus System {$system}: " . $e->getMessage();
            }
        }
        
        // Ergebnis zusammenstellen
        if (!empty($deletedSystems)) {
            $message = 'Kunde erfolgreich gelöscht aus: ' . implode(', ', $deletedSystems);
            if (!empty($errors)) {
                $message .= '. Warnungen: ' . implode(', ', $errors);
            }
            echo json_encode(['success' => true, 'message' => $message]);
        } else {
            echo json_encode(['success' => false, 'message' => 'Fehler beim Löschen des Kunden: ' . implode(', ', $errors)]);
        }
        
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Löschen des Kunden: ' . $e->getMessage()]);
    }
}

function handleLinkExistingUser($serviceManager, $db) {
    try {
        $username = $_POST['username'];
        $email = $_POST['email'];
        $fullName = $_POST['full_name'];
        $password = $_POST['password'];
        $systems = $_POST['systems'] ?? [];
        
        // Lokalen Benutzer anlegen
        $stmt = $db->prepare("INSERT INTO users (username, email, password_hash, full_name, role, active, created_at) VALUES (?, ?, ?, ?, 'user', 'y', NOW())");
        $passwordHash = password_hash($password, PASSWORD_DEFAULT);
        $db->execute($stmt, [$username, $email, $passwordHash, $fullName]);
        $userId = $db->lastInsertId();
        
        // TODO: E-Mail mit Anmeldedaten senden - ausschließlich über Template-System
        $emailTemplateManager = EmailTemplateManager::getInstance();
        $emailTemplateManager->sendUserWelcomeEmail($email, $fullName, $username, $password);
        
        // Bestehende System-Benutzer verknüpfen (verwendet user_permissions Tabelle)
        foreach ($systems as $system => $systemUserId) {
            if (!empty($systemUserId)) {
                $stmt = $db->prepare("INSERT INTO user_permissions (user_id, permission_type, resource_id, granted_by, created_at) VALUES (?, ?, ?, ?, NOW())");
                $db->execute($stmt, [$userId, $system, $systemUserId, $userId]);
            }
        }
        
        $_SESSION['success_message'] = "Bestehender Benutzer erfolgreich verknüpft!";
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
        
    } catch (Exception $e) {
        $_SESSION['error_message'] = "Fehler beim Verknüpfen: " . $e->getMessage();
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
    }
}

function handleGrantAccess($serviceManager, $db) {
    try {
        $userId = $_POST['user_id'];
        $system = $_POST['system'];
        $username = $_POST['username'];
        $password = $_POST['password'];
        $fullName = $_POST['full_name'];
        $email = $_POST['email'];
        
        // Benutzer im ausgewählten System anlegen
        $systemUserId = null;
        switch ($system) {
            case 'ogp':
                $systemUserId = $serviceManager->createOGPUser($username, $password, $fullName, '', ['email' => $email]);
                break;
            case 'proxmox':
                $systemUserId = $serviceManager->createProxmoxUser($username, $password, $fullName, '', ['email' => $email]);
                break;
            case 'ispconfig':
                $systemUserId = $serviceManager->createISPConfigUser($username, $password, $fullName, '', ['email' => $email]);
                break;
        }
        
        if ($systemUserId) {
            // Überprüfen, ob der permission_type gültig ist
            $validTypes = ['proxmox', 'ispconfig', 'ovh', 'ogp', 'admin', 'readonly'];
            if (!in_array($system, $validTypes)) {
                error_log("Ungültiger permission_type: " . $system);
                $_SESSION['warning_message'] = "Ungültiger System-Typ: " . $system;
                header("Location: " . $_SERVER['REQUEST_URI']);
                exit;
            }
            
            // Verknüpfung in user_permissions speichern
            try {
                $stmt = $db->prepare("INSERT INTO user_permissions (user_id, permission_type, resource_id, granted_by, created_at) VALUES (?, ?, ?, ?, NOW()) ON DUPLICATE KEY UPDATE resource_id = ?");
                $db->execute($stmt, [$userId, $system, $systemUserId, $userId, $systemUserId]);
            } catch (Exception $e) {
                // Falls 'ogp' nicht in der ENUM enthalten ist, verwende 'admin' als Fallback
                if (strpos($e->getMessage(), 'permission_type') !== false && $system === 'ogp') {
                    error_log("OGP permission_type nicht verfügbar, verwende 'admin' als Fallback");
                    $stmt = $db->prepare("INSERT INTO user_permissions (user_id, permission_type, resource_id, granted_by, created_at) VALUES (?, 'admin', ?, ?, NOW()) ON DUPLICATE KEY UPDATE resource_id = ?");
                    $db->execute($stmt, [$userId, $systemUserId, $userId, $systemUserId]);
                } else {
                    throw $e;
                }
            }
            
            $_SESSION['success_message'] = "Zugriff auf " . ucfirst($system) . " erfolgreich gewährt!";
        } else {
            $_SESSION['warning_message'] = "Benutzer konnte in " . ucfirst($system) . " nicht angelegt werden.";
        }
        
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
        
    } catch (Exception $e) {
        $_SESSION['error_message'] = "Fehler beim Gewähren des Zugriffs: " . $e->getMessage();
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
    }
}

function handleRevokeAccess($serviceManager, $db) {
    try {
        $userId = $_POST['user_id'];
        $system = $_POST['system'];
        
        // Verknüpfung aus user_permissions entfernen
        $stmt = $db->prepare("DELETE FROM user_permissions WHERE user_id = ? AND permission_type = ?");
        $db->execute($stmt, [$userId, $system]);
        
        $_SESSION['success_message'] = "Zugriff auf " . ucfirst($system) . " erfolgreich entzogen!";
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
        
    } catch (Exception $e) {
        $_SESSION['error_message'] = "Fehler beim Entziehen des Zugriffs: " . $e->getMessage();
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
    }
}


function handleDeleteUser($serviceManager, $db) {
    try {
        $userId = $_POST['user_id'] ?? '';
        $deleteFromSystems = $_POST['delete_from_systems'] ?? [];
        
        if (empty($userId)) {
            echo json_encode(['success' => false, 'message' => 'Benutzer-ID ist erforderlich']);
            return;
        }
        
        // System-Verknüpfungen abrufen
        $stmt = $db->prepare("SELECT permission_type, resource_id FROM user_permissions WHERE user_id = ?");
        $db->execute($stmt, [$userId]);
        $permissions = $db->fetchAll($stmt);
        
        // Benutzer aus verknüpften Systemen löschen
        foreach ($permissions as $permission) {
            $system = $permission['permission_type'];
            $systemUserId = $permission['resource_id'];
            
            // Nur löschen wenn explizit gewünscht
            if (in_array($system, $deleteFromSystems)) {
                try {
                    switch ($system) {
                        case 'ogp':
                            $serviceManager->deleteOGPUser($systemUserId);
                            break;
                        case 'proxmox':
                            $serviceManager->deleteProxmoxUser($systemUserId);
                            break;
                        case 'ispconfig':
                            $serviceManager->deleteISPConfigClient($systemUserId);
                            break;
                    }
                } catch (Exception $e) {
                    error_log('Fehler beim Löschen im System ' . $system . ': ' . $e->getMessage());
                }
            }
        }
        
        // Verknüpfungen aus user_permissions entfernen
        $stmt = $db->prepare("DELETE FROM user_permissions WHERE user_id = ?");
        $db->execute($stmt, [$userId]);
        
        // Lokalen Benutzer löschen
        $stmt = $db->prepare("DELETE FROM users WHERE id = ?");
        $db->execute($stmt, [$userId]);
        
        echo json_encode(['success' => true, 'message' => 'Benutzer erfolgreich gelöscht']);
        
    } catch (Exception $e) {
        echo json_encode(['success' => false, 'message' => 'Fehler beim Löschen des Benutzers: ' . $e->getMessage()]);
    }
}

function handleUpdatePassword($serviceManager, $db) {
    try {
        $userId = $_POST['user_id'];
        $newPassword = $_POST['new_password'];
        $systems = $_POST['systems'] ?? [];
        
        // Lokales Passwort aktualisieren
        $passwordHash = password_hash($newPassword, PASSWORD_DEFAULT);
        $stmt = $db->prepare("UPDATE users SET password_hash = ? WHERE id = ?");
        $db->execute($stmt, [$passwordHash, $userId]);
        
        // System-Verknüpfungen abrufen
        $stmt = $db->prepare("SELECT permission_type, resource_id FROM user_permissions WHERE user_id = ?");
        $db->execute($stmt, [$userId]);
        $permissions = $db->fetchAll($stmt);
        
        $updatedSystems = [];
        
        // Passwort in verknüpften Systemen aktualisieren
        foreach ($permissions as $permission) {
            $system = $permission['permission_type'];
            $systemUserId = $permission['resource_id'];
            
            // Nur aktualisieren wenn explizit gewünscht
            if (in_array($system, $systems)) {
                switch ($system) {
                    case 'ogp':
                        $result = $serviceManager->updateOGPUserPassword($systemUserId, $newPassword);
                        if ($result) $updatedSystems[] = 'OGP';
                        break;
                    case 'proxmox':
                        $result = $serviceManager->updateProxmoxUserPassword($systemUserId, $newPassword);
                        if ($result) $updatedSystems[] = 'Proxmox';
                        break;
                    case 'ispconfig':
                        $result = $serviceManager->updateISPConfigUserPassword($systemUserId, $newPassword);
                        if ($result) $updatedSystems[] = 'ISPConfig';
                        break;
                }
            }
        }
        
        if (!empty($updatedSystems)) {
            $_SESSION['success_message'] = "Passwort erfolgreich aktualisiert in: " . implode(', ', $updatedSystems);
        } else {
            $_SESSION['success_message'] = "Lokales Passwort erfolgreich aktualisiert!";
        }
        
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
        
    } catch (Exception $e) {
        $_SESSION['error_message'] = "Fehler beim Aktualisieren des Passworts: " . $e->getMessage();
        header("Location: " . $_SERVER['REQUEST_URI']);
        exit;
    }
}


?>
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <ul class="nav nav-tabs card-header-tabs" id="userTabs" role="tablist">
                        
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="list-tab" data-bs-toggle="tab" data-bs-target="#list" type="button" role="tab">
                                <i class="bi bi-people"></i> <?= t('user_list') ?>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="create-tab" data-bs-toggle="tab" data-bs-target="#create" type="button" role="tab">
                                <i class="bi bi-person-plus"></i> <?= t('create_user') ?>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="merge-tab" data-bs-toggle="tab" data-bs-target="#merge" type="button" role="tab">
                                <i class="bi bi-arrow-left-right"></i> <?= t('merge_users') ?>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="link-tab" data-bs-toggle="tab" data-bs-target="#link" type="button" role="tab">
                                <i class="bi bi-arrow-left-right"></i> <?= t('link_users') ?>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="customers-tab" data-bs-toggle="tab" data-bs-target="#customers" type="button" role="tab">
                                <i class="bi bi-people-fill"></i> <?= t('customers_management') ?>
                            </button>
                        </li>
                    </ul>
                </div>
                <div class="card-body">
                    <!-- Session-Meldungen ausgeben -->
                    <?php if (isset($_SESSION['success_message'])): ?>
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <?= $_SESSION['success_message'] ?>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        <?php unset($_SESSION['success_message']); ?>
                    <?php endif; ?>
                    
                    <?php if (isset($_SESSION['error_message'])): ?>
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <?= $_SESSION['error_message'] ?>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        <?php unset($_SESSION['error_message']); ?>
                    <?php endif; ?>
                    
                    <?php if (isset($_SESSION['warning_message'])): ?>
                        <div class="alert alert-warning alert-dismissible fade show" role="alert">
                            <?= $_SESSION['warning_message'] ?>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        <?php unset($_SESSION['warning_message']); ?>
                    <?php endif; ?>
                    
                    <?php if (isset($_SESSION['info_message'])): ?>
                        <div class="alert alert-info alert-dismissible fade show" role="alert">
                            <?= $_SESSION['info_message'] ?>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        <?php unset($_SESSION['info_message']); ?>
                    <?php endif; ?>
                    
                    <div class="tab-content" id="userTabsContent">
                        <!-- Benutzerliste Tab -->
                        <div class="tab-pane fade show active" id="list" role="tabpanel">
                            <!-- API Fehler anzeigen -->
                            <?php if (!empty($apiErrors)): ?>
                                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                                    <h5><i class="bi bi-exclamation-triangle"></i> <?= t('api_warnings') ?></h5>
                                    <ul class="mb-0">
                                        <?php foreach ($apiErrors as $system => $error): ?>
                                            <li><strong><?= ucfirst($system) ?>:</strong> 
                                                <?php if (is_string($error)): ?>
                                                    <?= htmlspecialchars($error) ?>
                                                <?php else: ?>
                                                    <?= htmlspecialchars(var_export($error, true)) ?>
                                                <?php endif; ?>
                                            </li>
                                        <?php endforeach; ?>
                                    </ul>
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                </div>
                            <?php endif; ?>
                            
                            <!-- Debug-Informationen -->
                            <div class="alert alert-info alert-dismissible fade show" role="alert">
                                <h6><i class="bi bi-info-circle"></i> <?= t('api_status') ?></h6>
                                <ul class="mb-0">
                                    <li><strong><?= t('opengamepanel') ?>:</strong> <?= is_array($ogpUsers) ? count($ogpUsers) . ' ' . t('users') : 'Fehler: ' . gettype($ogpUsers) ?></li>
                                    <li><strong><?= t('proxmox') ?>:</strong> <?= is_array($proxmoxUsers) ? count($proxmoxUsers) . ' ' . t('users') : 'Fehler: ' . gettype($proxmoxUsers) ?></li>
                                    <li><strong><?= t('ispconfig') ?>:</strong> <?= is_array($ispconfigClients) ? count($ispconfigClients) . ' ' . t('users') : 'Fehler: ' . gettype($ispconfigClients) ?></li>
                                    <li><strong><?= t('customers') ?>:</strong> <?= is_array($customersUsers) ? count($customersUsers) . ' ' . t('users') : 'Fehler: ' . gettype($customersUsers) ?></li>
                                </ul>
                                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                            </div>

                            <!-- Admin Dashboard Benutzer -->
                            <div class="card mb-4">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0"><i class="bi bi-speedometer2"></i> <?= t('admin_dashboard') ?> <?= t('users') ?></h6>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-primary" onclick="loadUsers()">
                                            <i class="bi bi-arrow-clockwise"></i> <?= t('refresh') ?>
                                        </button>
                                        <button class="btn btn-sm btn-primary" onclick="showCreateUserModal()">
                                            <i class="bi bi-plus-circle"></i> <?= t('create_user') ?>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <!-- Filter und Suche -->
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <input type="text" class="form-control" id="userSearchInput" placeholder="<?= t('search_users') ?>" onkeyup="debounce(loadUsers, 500)()">
                                        </div>
                                        <div class="col-md-2">
                                            <select class="form-select" id="userStatusFilter" onchange="loadUsers()">
                                                <option value=""><?= t('all_statuses') ?></option>
                                                <option value="active"><?= t('active') ?></option>
                                                <option value="inactive"><?= t('inactive') ?></option>
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <select class="form-select" id="userRoleFilter" onchange="loadUsers()">
                                                <option value=""><?= t('all_roles') ?></option>
                                                <option value="admin"><?= t('admin') ?></option>
                                                <option value="user"><?= t('user') ?></option>
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <select class="form-select" id="userTypeFilter" onchange="loadUsers()">
                                                <option value=""><?= t('all_user_types') ?></option>
                                                <option value="admin"><?= t('admin_users') ?></option>
                                                <option value="customer"><?= t('customers') ?></option>
                                            </select>
                                        </div>
                                    </div>
                                    
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <thead>
                                                <tr>
                                                    <th><?= t('username') ?></th>
                                                    <th><?= t('full_name') ?></th>
                                                    <th><?= t('email') ?></th>
                                                    <th><?= t('role') ?></th>
                                                    <th><?= t('user_type') ?></th>
                                                    <th><?= t('status') ?></th>
                                                    <th><?= t('created') ?></th>
                                                    <th><?= t('actions') ?></th>
                                                </tr>
                                            </thead>
                                            <tbody id="usersTableBody">
                                                <?php if (!empty($adminUsers)): ?>
                                                    <?php foreach ($adminUsers as $user): ?>
                                                        <tr>
                                                            <td><?= htmlspecialchars($user['username']) ?></td>
                                                            <td><?= htmlspecialchars($user['full_name'] ?? '') ?></td>
                                                            <td><?= htmlspecialchars($user['email']) ?></td>
                                                            <td><?= htmlspecialchars($user['role'] ?? '') ?></td>
                                                            <td><?= htmlspecialchars($user['role'] ?? 'user') ?></td>
                                                            <td>
                                                                <?php if (($user['active'] ?? '') === 'y'): ?>
                                                                    <span class="badge bg-success"><?= t('active') ?></span>
                                                                <?php else: ?>
                                                                    <span class="badge bg-danger"><?= t('inactive') ?></span>
                                                                <?php endif; ?>
                                                            </td>
                                                            <td><?= htmlspecialchars($user['created_at'] ?? '') ?></td>
                                                            <td>
                                                                <div class="btn-group" role="group">
                                                                    <button type="button" class="btn btn-sm btn-outline-primary" 
                                                                            onclick="editUser(<?= $user['id'] ?>)">
                                                                        <i class="bi bi-pencil"></i>
                                                                    </button>
                                                                    <button type="button" class="btn btn-sm btn-outline-danger" 
                                                                            onclick="deleteUser(<?= $user['id'] ?>, '<?= htmlspecialchars($user['username']) ?>')">
                                                                        <i class="bi bi-trash"></i>
                                                                    </button>
                                                                    <button type="button" class="btn btn-sm btn-outline-info" 
                                                                            onclick="viewUserDetails(<?= $user['id'] ?>)">
                                                                        <i class="bi bi-eye"></i>
                                                                    </button>
                                                                </div>
                                                            </td>
                                                        </tr>
                                                    <?php endforeach; ?>
                                                <?php else: ?>
                                                    <tr>
                                                        <td colspan="8" class="text-center">
                                                            <div class="alert alert-info">
                                                                <i class="bi bi-info-circle"></i> <?= t('no_users_found') ?>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                <?php endif; ?>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <!-- Kundenliste -->
                            <div class="card mb-4">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0"><i class="bi bi-people-fill"></i> <?= t('customers') ?> <?= t('users') ?></h6>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-primary" onclick="refreshUserList('customers')">
                                            <i class="bi bi-arrow-clockwise"></i> <?= t('refresh') ?>
                                        </button>
                                        <button class="btn btn-sm btn-outline-primary" onclick="showCreateCustomerModal()">
                                            <i class="bi bi-plus-circle"></i> <?= t('create_customer') ?>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover">
                                            <thead>
                                                <tr>
                                                    <th><?= t('first_name') ?></th>
                                                    <th><?= t('last_name') ?></th>
                                                    <th><?= t('email') ?></th>
                                                    <th><?= t('status') ?></th>
                                                    <th><?= t('created') ?></th>
                                                    <th><?= t('actions') ?></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <?php foreach ($customersUsers as $user): ?>
                                                    <tr>
                                                        <td><?= htmlspecialchars($user['first_name']) ?></td>
                                                        <td><?= htmlspecialchars($user['last_name']) ?></td>
                                                        <td><?= htmlspecialchars($user['email']) ?></td>
                                                        <td><?= htmlspecialchars($user['status']) ?></td>
                                                        <td><?= htmlspecialchars($user['created_at']) ?></td>
                                                        <td>
                                                            <div class="btn-group" role="group">
                                                                <button type="button" class="btn btn-sm btn-outline-primary" 
                                                                    onclick="editCustomer(<?= $user['id'] ?>)">
                                                                    <i class="bi bi-pencil"></i>
                                                                </button>
                                                            </div>
                                                            <div class="btn-group" role="group">
                                                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                                                    onclick="deleteCustomer(<?= $user['id'] ?>, '<?= htmlspecialchars($user['email']) ?>')">
                                                                    <i class="bi bi-trash"></i>
                                                                </button>
                                                                <button type="button" class="btn btn-sm btn-outline-info" 
                                                                            onclick="viewCustomerDetails(<?= $user['id'] ?>)">
                                                                        <i class="bi bi-eye"></i>
                                                                    </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                <?php endforeach; ?>
                                            </tbody>
                                        </table>
                                        </tbody>
                                    </table>
                                    </div>
                                </div>
                            </div>

                             <!-- OGP Benutzer -->
                             <div class="card mb-4">
                                 <div class="card-header d-flex justify-content-between align-items-center">
                                     <h6 class="mb-0"><i class="bi bi-controller"></i> <?= t('opengamepanel') ?> <?= t('users') ?></h6>
                                     <button class="btn btn-sm btn-outline-primary" onclick="refreshUserList('ogp')">
                                         <i class="bi bi-arrow-clockwise"></i> <?= t('refresh') ?>
                                     </button>
                                 </div>
                                 <div class="card-body">
                                     <?php if (is_array($ogpUsers) && isset($ogpUsers['message']) && is_array($ogpUsers['message']) && count($ogpUsers['message']) > 0): ?>
                                         <div class="table-responsive">
                                             <table class="table table-striped table-hover" id="ogpUsersTable">
                                                 <thead>
                                                     <tr>
                                                         <th><?= t('email') ?></th>
                                                         <th><?= t('username') ?></th>
                                                         <th><?= t('expires') ?></th>
                                                         <th><?= t('actions') ?></th>
                                                     </tr>
                                                 </thead>
                                                 <tbody>
                                                     <?php foreach ($ogpUsers['message'] as $user): ?>
                                                         <tr data-user-id="<?= htmlspecialchars($user['users_email'] ?? '') ?>" data-system="ogp">
                                                             <td>
                                                                 <span class="user-email"><?= htmlspecialchars($user['users_email'] ?? '') ?></span>
                                                                 <input type="email" class="form-control form-control-sm edit-email" style="display:none;" value="<?= htmlspecialchars($user['users_email'] ?? '') ?>">
                                                             </td>
                                                             <td>
                                                                 <span class="user-username"><?= htmlspecialchars($user['users_login'] ?? '') ?></span>
                                                                 <input type="text" class="form-control form-control-sm edit-username" style="display:none;" value="<?= htmlspecialchars($user['users_login'] ?? '') ?>">
                                                             </td>
                                                             <td>
                                                                 <?php if (isset($user['user_expires']) && $user['user_expires'] && $user['user_expires'] !== 'X'): ?>
                                                                     <span class="badge bg-warning user-expires">
                                                                         <?= date('d.m.Y H:i', strtotime($user['user_expires'])) ?>
                                                                     </span>
                                                                 <?php else: ?>
                                                                     <span class="badge bg-success user-expires"><?= t('unlimited') ?></span>
                                                                 <?php endif; ?>
                                                                 <input type="datetime-local" class="form-control form-control-sm edit-expires" style="display:none;" value="<?= isset($user['user_expires']) && $user['user_expires'] && $user['user_expires'] !== 'X' ? date('Y-m-d\TH:i', strtotime($user['user_expires'])) : '' ?>">
                                                             </td>
                                                             <td>
                                                                 <div class="btn-group view-mode" role="group">
                                                                     <button class="btn btn-sm btn-outline-primary" onclick="startEditUser(this)">
                                                                         <i class="bi bi-pencil"></i>
                                                                     </button>
                                                                     <button class="btn btn-sm btn-outline-danger" onclick="deleteSystemUser('ogp', '<?= htmlspecialchars($user['users_email'] ?? '') ?>')">
                                                                         <i class="bi bi-trash"></i>
                                                                     </button>
                                                                 </div>
                                                                 <div class="btn-group edit-mode" role="group" style="display:none;">
                                                                     <button class="btn btn-sm btn-success" onclick="saveUserEdit(this)">
                                                                         <i class="bi bi-check"></i>
                                                                     </button>
                                                                     <button class="btn btn-sm btn-secondary" onclick="cancelUserEdit(this)">
                                                                         <i class="bi bi-x"></i>
                                                                     </button>
                                                                 </div>
                                                             </td>
                                                         </tr>
                                                     <?php endforeach; ?>
                                                 </tbody>
                                             </table>
                                         </div>
                                     <?php else: ?>
                                         <div class="alert alert-info">
                                             <i class="bi bi-info-circle"></i> <?= t('no_ogp_users_found') ?>
                                         </div>
                                     <?php endif; ?>
                                 </div>
                             </div>

                            <!-- Proxmox Benutzer -->
                            <div class="card mb-4">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0"><i class="bi bi-server"></i> <?= t('proxmox') ?> <?= t('users') ?></h6>
                                    <div class="btn-group">
                                    <button class="btn btn-sm btn-outline-primary" onclick="refreshUserList('proxmox')">
                                        <i class="bi bi-arrow-clockwise"></i> <?= t('refresh') ?>
                                    </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <?php if (is_array($proxmoxUsers) && isset($proxmoxUsers['data']) && is_array($proxmoxUsers['data']) && count($proxmoxUsers['data']) > 0): ?>
                                        <div class="table-responsive">
                                            <table class="table table-striped table-hover">
                                                <thead>
                                                    <tr>
                                                        <th><?= t('userid') ?></th>
                                                        <th><?= t('Realm') ?></th>
                                                        <th><?= t('email') ?></th>
                                                        <th><?= t('actions') ?></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <?php foreach ($proxmoxUsers['data'] as $user): ?>
                                                        <tr>
                                                            <td><?= htmlspecialchars($user['userid'] ?? '') ?></td>
                                                            <td><?= htmlspecialchars($user['realm-type'] ?? '') ?></td>
                                                            <td><?= htmlspecialchars($user['email'] ?? '') ?></td>
                                                            <td>
                                                                <button class="btn btn-sm btn-outline-primary" onclick="editUser('proxmox', '<?= htmlspecialchars($user['userid'] ?? '') ?>')">
                                                                    <i class="bi bi-pencil"></i>
                                                                </button>
                                                                <button class="btn btn-sm btn-outline-danger" onclick="deleteUser('proxmox', '<?= htmlspecialchars($user['userid'] ?? '') ?>')">
                                                                    <i class="bi bi-trash"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    <?php endforeach; ?>
                                                </tbody>
                                            </table>
                                        </div>
                                    <?php else: ?>
                                        <div class="alert alert-info">
                                            <i class="bi bi-info-circle"></i> <?= t('no_proxmox_users_found') ?>
                                        </div>
                                    <?php endif; ?>
                                </div>
                            </div>

                            <!-- ISPConfig Benutzer -->
                            <div class="card mb-4">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0"><i class="bi bi-globe"></i> <?= t('ispconfig') ?> <?= t('users') ?></h6>
                                    <button class="btn btn-sm btn-outline-primary" onclick="refreshUserList('ispconfig')">
                                        <i class="bi bi-arrow-clockwise"></i> <?= t('refresh') ?>
                                    </button>
                                </div>
                                <div class="card-body">
                                    <?php if (!empty($ispconfigClients) && is_array($ispconfigClients)): ?>
                                        <div class="table-responsive">
                                            <table class="table table-sm">
                                                <thead>
                                                    <tr>
                                                        <th><?= t('username') ?></th>
                                                        <th><?= t('email') ?></th>
                                                        <th><?= t('status') ?></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    <?php foreach ($ispconfigClients as $user): ?>
                                                        <tr>
                                                            <td><?= htmlspecialchars($user['username'] ?? $user['name'] ?? $user['user'] ?? 'Unbekannt') ?></td>
                                                            <td><?= htmlspecialchars($user['email'] ?? $user['mail'] ?? 'Keine E-Mail') ?></td>
                                                            <td><span class="badge bg-success"><?= t('active') ?></span></td>
                                                        </tr>
                                                    <?php endforeach; ?>
                                                </tbody>
                                            </table>
                                        </div>
                                    <?php else: ?>
                                        <div class="alert alert-info">
                                            <i class="bi bi-info-circle"></i> 
                                            <?php if (is_array($ispconfigClients)): ?>
                                                <?= t('no_ispconfig_users_found') ?>
                                            <?php else: ?>
                                                <?= t('ispconfig_api_error') ?>: <?= htmlspecialchars(gettype($ispconfigClients)) ?>
                                            <?php endif; ?>
                                        </div>
                                    <?php endif; ?>
                                </div>
                            </div>
                        </div>

                        <!-- Benutzer erstellen Tab -->
                        <div class="tab-pane fade" id="create" role="tabpanel">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i>
                                <strong><?= t('note') ?></strong> <?= t('new_system_user_note') ?>
                            </div>
                            
                            <form id="createSystemUserForm">
                                <input type="hidden" name="action" value="create_system_user">
                                
                                <!-- Grundlegende Benutzerdaten -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="mb-0"><?= t('new_system_user') ?></h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="createUsername" class="form-label"><?= t('username') ?> *</label>
                                                <input type="text" class="form-control" id="createUsername" name="username" required>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="createEmail" class="form-label"><?= t('email') ?> *</label>
                                                <input type="email" class="form-control" id="createEmail" name="email" required>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="createFullName" class="form-label"><?= t('full_name') ?> *</label>
                                                <input type="text" class="form-control" id="createFullName" name="full_name" required>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="createPassword" class="form-label"><?= t('password') ?> *</label>
                                                <input type="password" class="form-control" id="createPassword" name="password" required>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="d-grid">
                                    <button type="submit" class="btn btn-success">
                                        <i class="bi bi-person-plus"></i> <?= t('create_user') ?>
                                    </button>
                                </div>
                            </form>
                        </div>

                        <!-- Benutzer zusammenführen Tab -->
                        <div class="tab-pane fade" id="merge" role="tabpanel">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i>
                                <strong><?= t('note') ?></strong> <?= t('merge_users_note') ?>
                            </div>
                            
                            <?php
                            // Benutzer-Zusammenführungsvorschläge generieren
                            $mergeSuggestions = [];
                            
                            // Nach E-Mail-Adressen gruppieren
                            $emailGroups = [];
                            
                            // OGP Benutzer nach E-Mail gruppieren
                            if (is_array($ogpUsers) && isset($ogpUsers['message'])) {
                                foreach ($ogpUsers['message'] as $user) {
                                    $email = '';
                                    if (isset($user['users_email']) && !empty($user['users_email'])) {
                                        $email = strtolower(trim($user['users_email']));
                                    } elseif (isset($user['email']) && !empty($user['email'])) {
                                        $email = strtolower(trim($user['email']));
                                    }
                                    
                                    if (!empty($email)) {
                                        if (!isset($emailGroups[$email])) {
                                            $emailGroups[$email] = [];
                                        }
                                        $emailGroups[$email]['ogp'] = $user;
                                    }
                                }
                            }
                            
                            // Proxmox Benutzer nach E-Mail gruppieren
                            if (is_array($proxmoxUsers) && isset($proxmoxUsers['data'])) {
                                foreach ($proxmoxUsers['data'] as $user) {
                                    $email = '';
                                    if (isset($user['email']) && !empty($user['email'])) {
                                        $email = strtolower(trim($user['email']));
                                    }
                                    
                                    if (!empty($email)) {
                                        if (!isset($emailGroups[$email])) {
                                            $emailGroups[$email] = [];
                                        }
                                        $emailGroups[$email]['proxmox'] = $user;
                                    }
                                }
                            }
                            
                            // ISPConfig Benutzer nach E-Mail gruppieren
                            if (is_array($ispconfigClients)) {
                                foreach ($ispconfigClients as $user) {
                                    $email = '';
                                    if (isset($user['email']) && !empty($user['email'])) {
                                        $email = strtolower(trim($user['email']));
                                    } elseif (isset($user['mail']) && !empty($user['mail'])) {
                                        $email = strtolower(trim($user['mail']));
                                    }
                                    
                                    if (!empty($email)) {
                                        if (!isset($emailGroups[$email])) {
                                            $emailGroups[$email] = [];
                                        }
                                        $emailGroups[$email]['ispconfig'] = $user;
                                    }
                                }
                            }
                            
                            // Lokale Benutzer nach E-Mail gruppieren
                            foreach ($adminUsers as $user) {
                                if (isset($user['email']) && !empty($user['email'])) {
                                    $email = strtolower(trim($user['email']));
                                    if (!isset($emailGroups[$email])) {
                                        $emailGroups[$email] = [];
                                    }
                                    $emailGroups[$email]['local'] = $user;
                                }
                            }
                            
                            // Verknüpfungsvorschläge generieren
                            foreach ($emailGroups as $email => $systems) {
                                // Nur Vorschläge für E-Mails mit mehreren Systemen oder lokalen Benutzern
                                if (count($systems) > 1 || isset($systems['local'])) {
                                    $mergeSuggestions[] = [
                                        'email' => $email,
                                        'systems' => $systems
                                    ];
                                }
                            }
                            
                            // Aktuelle Verknüpfungen aus der Datenbank abrufen
                            $currentLinks = [];
                            try {
                                $stmt = $db->query("
                                    SELECT u.id, u.username, u.email, u.full_name, up.permission_type, up.resource_id, up.created_at
                                    FROM users u
                                    LEFT JOIN user_permissions up ON u.id = up.user_id
                                    WHERE up.permission_type IN ('ogp', 'proxmox', 'ispconfig')
                                    ORDER BY u.username, up.permission_type
                                ");
                                $currentLinks = $db->fetchAll($stmt);
                            } catch (Exception $e) {
                                error_log("Fehler beim Laden der Verknüpfungen: " . $e->getMessage());
                            }
                            
                            // Verknüpfungsstatus für jede E-Mail prüfen
                            $linkedEmails = [];
                            foreach ($currentLinks as $link) {
                                $linkedEmails[] = strtolower(trim($link['email']));
                            }
                            ?>
                            
                            <!-- Verknüpfungsstatus -->
                            <div class="card mb-4">
                                <div class="card-header">
                                    <h6 class="mb-0"><i class="bi bi-info-circle"></i> <?= t('link_status') ?></h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-primary"><?= count($adminUsers) ?></h4>
                                                <small><?= t('local_users') ?></small>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-success"><?= count($currentLinks) ?></h4>
                                                <small><?= t('active_links') ?></small>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-warning"><?= count($emailGroups) ?></h4>
                                                <small><?= t('email_groups') ?></small>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-info"><?= count($mergeSuggestions) ?></h4>
                                                <small><?= t('merge_suggestions') ?></small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <?php if (!empty($mergeSuggestions)): ?>
                                <h5><?= t('merge_suggestions') ?>:</h5>
                                <?php foreach ($mergeSuggestions as $suggestion): ?>
                                    <div class="card mb-3">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <strong><?= t('email') ?>: <?= htmlspecialchars($suggestion['email']) ?></strong>
                                            <?php if (in_array(strtolower($suggestion['email']), $linkedEmails)): ?>
                                                <span class="badge bg-success"><?= t('already_linked') ?></span>
                                            <?php else: ?>
                                                <span class="badge bg-warning"><?= t('not_linked') ?></span>
                                            <?php endif; ?>
                                        </div>
                                        <div class="card-body">
                                            <form method="post" class="merge-form">
                                                <input type="hidden" name="action" value="merge_users">
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        <label><?= t('opengamepanel') ?>:</label>
                                                        <?php if (isset($suggestion['systems']['ogp'])): ?>
                                                            <input type="text" class="form-control" value="<?= htmlspecialchars($suggestion['systems']['ogp']['users_login'] ?? $suggestion['systems']['ogp']['username'] ?? '') ?>" readonly>
                                                            <input type="hidden" name="system_users[ogp]" value="<?= htmlspecialchars($suggestion['systems']['ogp']['users_login'] ?? $suggestion['systems']['ogp']['username'] ?? '') ?>">
                                                        <?php else: ?>
                                                            <span class="text-muted"><?= t('no_user') ?></span>
                                                        <?php endif; ?>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label><?= t('proxmox') ?>:</label>
                                                        <?php if (isset($suggestion['systems']['proxmox'])): ?>
                                                            <input type="text" class="form-control" value="<?= htmlspecialchars($suggestion['systems']['proxmox']['userid'] ?? $suggestion['systems']['proxmox']['username'] ?? '') ?>" readonly>
                                                            <input type="hidden" name="system_users[proxmox]" value="<?= htmlspecialchars($suggestion['systems']['proxmox']['userid'] ?? $suggestion['systems']['proxmox']['username'] ?? '') ?>">
                                                        <?php else: ?>
                                                            <span class="text-muted"><?= t('no_user') ?></span>
                                                        <?php endif; ?>
                                                    </div>
                                                    <div class="col-md-2">
                                                        <label><?= t('ispconfig') ?>:</label>
                                                        <?php if (isset($suggestion['systems']['ispconfig'])): ?>
                                                            <input type="text" class="form-control" value="<?= htmlspecialchars($suggestion['systems']['ispconfig']['username'] ?? $suggestion['systems']['ispconfig']['name'] ?? '') ?>" readonly>
                                                            <input type="hidden" name="system_users[ispconfig]" value="<?= htmlspecialchars($suggestion['systems']['ispconfig']['username'] ?? $suggestion['systems']['ispconfig']['name'] ?? '') ?>">
                                                        <?php else: ?>
                                                            <span class="text-muted"><?= t('no_user') ?></span>
                                                        <?php endif; ?>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label><?= t('local_user') ?>:</label>
                                                        <?php if (isset($suggestion['systems']['local'])): ?>
                                                            <input type="text" class="form-control" value="<?= htmlspecialchars($suggestion['systems']['local']['username']) ?>" readonly>
                                                            <input type="hidden" name="main_user_id" value="<?= htmlspecialchars($suggestion['systems']['local']['id']) ?>">
                                                        <?php else: ?>
                                                            <select name="main_user_id" class="form-select" required>
                                                                <option value=""><?= t('select_user') ?></option>
                                                                <?php foreach ($adminUsers as $user): ?>
                                                                    <option value="<?= $user['id'] ?>"><?= htmlspecialchars($user['username']) ?></option>
                                                                <?php endforeach; ?>
                                                            </select>
                                                        <?php endif; ?>
                                                    </div>
                                                    <div class="col-md-3">
                                                        <label><?= t('actions') ?>:</label>
                                                        <div class="d-grid">
                                                            <?php if (in_array(strtolower($suggestion['email']), $linkedEmails)): ?>
                                                                <button type="button" class="btn btn-success btn-sm" disabled>
                                                                    <i class="bi bi-check-circle"></i> <?= t('already_linked') ?>
                                                                </button>
                                                            <?php else: ?>
                                                                <button type="submit" class="btn btn-primary btn-sm">
                                                                    <i class="bi bi-link-45deg"></i> <?= t('link') ?>
                                                                </button>
                                                            <?php endif; ?>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                <?php endforeach; ?>
                            <?php else: ?>
                                <div class="alert alert-success">
                                    <i class="bi bi-check-circle"></i>
                                    <?= t('no_merge_suggestions') ?>
                                </div>
                            <?php endif; ?>
                            
                            <!-- Alle verfügbaren System-Benutzer anzeigen -->
                            <div class="card mt-4">
                                <div class="card-header">
                                    <h6 class="mb-0"><i class="bi bi-list-ul"></i> <?= t('all_available_system_users') ?></h6>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <h6><?= t('ogp_users') ?>:</h6>
                                            <?php if (is_array($ogpUsers) && isset($ogpUsers['message']) && count($ogpUsers['message']) > 0): ?>
                                                <ul class="list-group">
                                                    <?php foreach (array_slice($ogpUsers['message'], 0, 10) as $user): ?>
                                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <strong><?= htmlspecialchars($user['users_login'] ?? $user['username'] ?? 'Unbekannt') ?></strong><br>
                                                                <small class="text-muted"><?= htmlspecialchars($user['users_email'] ?? $user['email'] ?? 'Keine E-Mail') ?></small>
                                                            </div>
                                                            <?php if (isset($user['users_email']) && !empty($user['users_email'])): ?>
                                                                <span class="badge bg-info"><?= count($emailGroups[strtolower($user['users_email'])] ?? 0) ?> Systeme</span>
                                                            <?php endif; ?>
                                                        </li>
                                                    <?php endforeach; ?>
                                                </ul>
                                            <?php else: ?>
                                                <p class="text-muted"><?= t('no_ogp_users') ?></p>
                                            <?php endif; ?>
                                        </div>
                                        
                                        <div class="col-md-4">
                                            <h6><?= t('proxmox_users') ?>:</h6>
                                            <?php if (is_array($proxmoxUsers) && isset($proxmoxUsers['data']) && count($proxmoxUsers['data']) > 0): ?>
                                                <ul class="list-group">
                                                    <?php foreach (array_slice($proxmoxUsers['data'], 0, 10) as $user): ?>
                                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <strong><?= htmlspecialchars($user['userid'] ?? $user['username'] ?? 'Unbekannt') ?></strong><br>
                                                                <small class="text-muted"><?= htmlspecialchars($user['email'] ?? 'Keine E-Mail') ?></small>
                                                            </div>
                                                            <?php if (isset($user['email']) && !empty($user['email'])): ?>
                                                                <span class="badge bg-info"><?= count($emailGroups[strtolower($user['email'])] ?? 0) ?> Systeme</span>
                                                            <?php endif; ?>
                                                        </li>
                                                    <?php endforeach; ?>
                                                </ul>
                                            <?php else: ?>
                                                <p class="text-muted"><?= t('no_proxmox_users') ?></p>
                                            <?php endif; ?>
                                        </div>
                                        
                                        <div class="col-md-4">
                                            <h6><?= t('ispconfig_users') ?>:</h6>
                                            <?php if (is_array($ispconfigClients) && count($ispconfigClients) > 0): ?>
                                                <ul class="list-group">
                                                    <?php foreach (array_slice($ispconfigClients, 0, 10) as $user): ?>
                                                        <li class="list-group-item d-flex justify-content-between align-items-center">
                                                            <div>
                                                                <strong><?= htmlspecialchars($user['username'] ?? $user['name'] ?? 'Unbekannt') ?></strong><br>
                                                                <small class="text-muted"><?= htmlspecialchars($user['email'] ?? $user['mail'] ?? 'Keine E-Mail') ?></small>
                                                            </div>
                                                            <?php if (isset($user['email']) && !empty($user['email'])): ?>
                                                                <span class="badge bg-info"><?= count($emailGroups[strtolower($user['email'])] ?? 0) ?> Systeme</span>
                                                            <?php endif; ?>
                                                        </li>
                                                    <?php endforeach; ?>
                                                </ul>
                                            <?php else: ?>
                                                <p class="text-muted"><?= t('no_ispconfig_users') ?></p>
                                            <?php endif; ?>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Bestehende Benutzer verknüpfen Tab -->
                        <div class="tab-pane fade" id="link" role="tabpanel">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i>
                                <strong><?= t('note') ?></strong> <?= t('link_users_note') ?>
                            </div>
                            
                            <form method="post">
                                <input type="hidden" name="action" value="link_existing_user">
                                
                                <!-- Grundlegende Benutzerdaten -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="mb-0"><?= t('new_local_user') ?></h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="link_username" class="form-label"><?= t('username') ?> *</label>
                                                <input type="text" class="form-control" id="link_username" name="username" required>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="link_email" class="form-label"><?= t('email') ?> *</label>
                                                <input type="email" class="form-control" id="link_email" name="email" required>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6 mb-3">
                                                <label for="link_full_name" class="form-label"><?= t('full_name') ?> *</label>
                                                <input type="text" class="form-control" id="link_full_name" name="full_name" required>
                                            </div>
                                            <div class="col-md-6 mb-3">
                                                <label for="link_password" class="form-label"><?= t('password') ?> *</label>
                                                <input type="password" class="form-control" id="link_password" name="password" required>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Bestehende System-Benutzer verknüpfen -->
                                <div class="card mb-3">
                                    <div class="card-header">
                                        <h6 class="mb-0"><?= t('existing_system_users') ?></h6>
                                    </div>
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-md-4 mb-3">
                                                <label for="link_ogp_user" class="form-label"><?= t('ogp_users') ?></label>
                                                <select class="form-select" id="link_ogp_user" name="systems[ogp]">
                                                    <option value=""><?= t('no_link') ?></option>
                                                    <?php if (is_array($ogpUsers) && isset($ogpUsers['message'])): ?>
                                                        <?php foreach ($ogpUsers['message'] as $user): ?>
                                                            <option value="<?= htmlspecialchars($user['users_login'] ?? $user['username'] ?? '') ?>">
                                                                <?= htmlspecialchars($user['users_login'] ?? $user['username'] ?? 'Unbekannt') ?> 
                                                                (<?= htmlspecialchars($user['users_email'] ?? $user['email'] ?? 'Keine E-Mail') ?>)
                                                            </option>
                                                        <?php endforeach; ?>
                                                    <?php endif; ?>
                                                </select>
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="link_proxmox_user" class="form-label"><?= t('proxmox_users') ?></label>
                                                <select class="form-select" id="link_proxmox_user" name="systems[proxmox]">
                                                    <option value=""><?= t('no_link') ?></option>
                                                    <?php if (is_array($proxmoxUsers) && isset($proxmoxUsers['data'])): ?>
                                                        <?php foreach ($proxmoxUsers['data'] as $user): ?>
                                                            <option value="<?= htmlspecialchars($user['userid'] ?? $user['username'] ?? '') ?>">
                                                                <?= htmlspecialchars($user['userid'] ?? $user['username'] ?? 'Unbekannt') ?> 
                                                                (<?= htmlspecialchars($user['email'] ?? 'Keine E-Mail') ?>)
                                                            </option>
                                                        <?php endforeach; ?>
                                                    <?php endif; ?>
                                                </select>
                                            </div>
                                            <div class="col-md-4 mb-3">
                                                <label for="link_ispconfig_user" class="form-label"><?= t('ispconfig_users') ?></label>
                                                <select class="form-select" id="link_ispconfig_user" name="systems[ispconfig]">
                                                    <option value=""><?= t('no_link') ?></option>
                                                    <?php foreach ($ispconfigClients as $user): ?>
                                                        <option value="<?= $user['client_id'] ?? $user['id'] ?? '' ?>">
                                                            <?= htmlspecialchars($user['username'] ?? 'Unbekannt') ?>
                                                        </option>
                                                    <?php endforeach; ?>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-arrow-left-right"></i> <?= t('link_users') ?>
                                </button>
                            </form>
                        </div>

                        <!-- Kundenverwaltung Tab -->
                        <div class="tab-pane fade" id="customers" role="tabpanel">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle"></i>
                                <strong><?= t('note') ?></strong> <?= t('customers_note') ?>
                            </div>
                            <div class="card mb-4">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0"><i class="bi bi-people-fill"></i> <?= t('customers_management') ?></h6>
                                    <button class="btn btn-sm btn-primary" onclick="showCreateCustomerModal()">
                                        <i class="bi bi-plus-circle"></i> <?= t('create_customer') ?>
                                    </button>
                                </div>
                                <div class="card-body">
                                    <div class="row mb-3">
                                        <div class="col-md-3">
                                            <input type="text" class="form-control" id="customerSearchInput" placeholder="<?= t('search_customers') ?>" onkeyup="debounce(loadCustomers, 500)()">
                                        </div>
                                        <div class="col-md-2">
                                            <select class="form-select" id="customerStatusFilter" onchange="loadCustomers()">
                                                <option value=""><?= t('all_statuses') ?></option>
                                                <option value="active"><?= t('active') ?></option>
                                                <option value="inactive"><?= t('inactive') ?></option>
                                            </select>
                                        </div>
                                        <div class="col-md-2">
                                            <select class="form-select" id="customerTypeFilter" onchange="loadCustomers()">
                                                <option value=""><?= t('all_customer_types') ?></option>
                                                <option value="reseller"><?= t('resellers') ?></option>
                                                <option value="customer"><?= t('customers') ?></option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-hover" id="customersTable">
                                            <thead>
                                                <tr>
                                                    <th><?= t('customer_id') ?></th>
                                                        <th><?= t('name') ?></th>
                                                    <th><?= t('email') ?></th>
                                                    <th><?= t('company') ?></th>
                                                    <th><?= t('phone') ?></th>
                                                    <th><?= t('status') ?></th>
                                                    <th><?= t('registered_at') ?></th>
                                                    <th><?= t('actions') ?></th>
                                                </tr>
                                            </thead>
                                            <tbody id="customersTableBody">
                                                <?php if (!empty($customers)): ?>
                                                    <?php foreach ($customers as $customer): ?>
                                                        <tr data-customer-id="<?= htmlspecialchars($customer['id']) ?>">
                                                            <td><?= htmlspecialchars($customer['id']) ?></td>
                                                            <td>
                                                                <strong><?= htmlspecialchars($customer['first_name'] . ' ' . $customer['last_name']) ?></strong>
                                                            </td>
                                                            <td>
                                                                <a href="mailto:<?= htmlspecialchars($customer['email']) ?>">
                                                                    <?= htmlspecialchars($customer['email']) ?>
                                                                </a>
                                                            </td>
                                                            <td><?= htmlspecialchars($customer['company'] ?? '-') ?></td>
                                                            <td><?= htmlspecialchars($customer['phone'] ?? '-') ?></td>
                                                            <td>
                                                                <?php
                                                                $statusClass = '';
                                                                $statusText = '';
                                                                switch ($customer['status']) {
                                                                    case 'pending':
                                                                        $statusClass = 'warning';
                                                                        $statusText = t('pending');
                                                                        break;
                                                                    case 'active':
                                                                        $statusClass = 'success';
                                                                        $statusText = t('active');
                                                                        break;
                                                                    case 'suspended':
                                                                        $statusClass = 'danger';
                                                                        $statusText = t('suspended');
                                                                        break;
                                                                    case 'deleted':
                                                                        $statusClass = 'secondary';
                                                                        $statusText = t('deleted');
                                                                        break;
                                                                    default:
                                                                        $statusClass = 'secondary';
                                                                        $statusText = t('unknown');
                                                                }
                                                                ?>
                                                                <span class="badge bg-<?= $statusClass ?>"><?= $statusText ?></span>
                                                            </td>
                                                            <td>
                                                                <?= $customer['created_at'] ? date('d.m.Y H:i', strtotime($customer['created_at'])) : '-' ?>
                                                            </td>
                                                            <td>
                                                                <?php if ($customer['status'] === 'pending'): ?>
                                                                    <form method="POST" style="display: inline;" onsubmit="return confirm('Kunde wirklich aktivieren?')">
                                                                        <input type="hidden" name="action" value="activate_customer">
                                                                        <input type="hidden" name="customer_id" value="<?= $customer['id'] ?>">
                                                                        <button type="submit" class="btn btn-success btn-sm" title="Kunde aktivieren">
                                                                            <i class="bi bi-check"></i> <?= t('activate') ?>
                                                                        </button>
                                                                    </form>
                                                                <?php elseif ($customer['status'] === 'active'): ?>
                                                                    <span class="text-success">
                                                                        <i class="bi bi-check-circle"></i> <?= t('activated') ?>
                                                                    </span>
                                                                <?php endif; ?>
                                                                
                                                                <button type="button" class="btn btn-info btn-sm ms-1" 
                                                                        onclick="showCustomerDetails(<?= $customer['id'] ?>)" 
                                                                        title="<?= t('show_details') ?>">
                                                                    <i class="bi bi-eye"></i>
                                                                </button>
                                                            </td>
                                                        </tr>
                                                    <?php endforeach; ?>
                                                <?php else: ?>
                                                    <tr>
                                                        <td colspan="8" class="text-center">
                                                            <div class="alert alert-info">
                                                                <i class="bi bi-info-circle"></i> <?= t('no_customers_found') ?>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                <?php endif; ?>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<!-- Modal für Benutzer bearbeiten -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel"><?= t('edit_user') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editUserForm">
                <input type="hidden" name="action" value="edit_user">
                <input type="hidden" id="editUserId" name="user_id">
                <div class="modal-body">
                    <!-- Grundlegende Informationen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-person"></i> <?= t('basic_information') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editUsername" class="form-label"><?= t('username') ?> *</label>
                            <input type="text" class="form-control" id="editUsername" name="username" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editEmail" class="form-label"><?= t('email') ?> *</label>
                            <input type="email" class="form-control" id="editEmail" name="email" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editFullName" class="form-label"><?= t('full_name') ?></label>
                            <input type="text" class="form-control" id="editFullName" name="full_name">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editRole" class="form-label"><?= t('role') ?></label>
                            <select class="form-select" id="editRole" name="role">
                                <option value="user"><?= t('user') ?></option>
                                <option value="admin"><?= t('admin') ?></option>
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editActive" class="form-label"><?= t('status') ?></label>
                            <select class="form-select" id="editActive" name="active">
                                <option value="y"><?= t('active') ?></option>
                                <option value="n"><?= t('inactive') ?></option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editGroupId" class="form-label"><?= t('group_id') ?></label>
                            <input type="number" class="form-control" id="editGroupId" name="group_id">
                        </div>
                    </div>
                    
                    <!-- Sicherheitsinformationen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-shield-lock"></i> <?= t('security_information') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editPassword" class="form-label"><?= t('new_password') ?> (<?= t('leave_empty_no_change') ?>)</label>
                            <input type="password" class="form-control" id="editPassword" name="password">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editFailedLoginAttempts" class="form-label"><?= t('failed_login_attempts') ?></label>
                            <input type="number" class="form-control" id="editFailedLoginAttempts" name="failed_login_attempts" min="0">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editLockedUntil" class="form-label"><?= t('locked_until') ?></label>
                            <input type="datetime-local" class="form-control" id="editLockedUntil" name="locked_until">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editPasswordChangedAt" class="form-label"><?= t('password_changed_at') ?></label>
                            <input type="datetime-local" class="form-control" id="editPasswordChangedAt" name="password_changed_at" readonly>
                        </div>
                    </div>
                    
                    <!-- Zeitstempel -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-clock"></i> <?= t('timestamps') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editLastLogin" class="form-label"><?= t('last_login') ?></label>
                            <input type="datetime-local" class="form-control" id="editLastLogin" name="last_login" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCreatedAt" class="form-label"><?= t('created_at') ?></label>
                            <input type="datetime-local" class="form-control" id="editCreatedAt" name="created_at" readonly>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editUpdatedAt" class="form-label"><?= t('updated_at') ?></label>
                            <input type="datetime-local" class="form-control" id="editUpdatedAt" name="updated_at" readonly>
                        </div>
                    </div>
                    
                    <!-- System-Verknüpfungen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-link-45deg"></i> <?= t('system_links') ?></h6>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div id="editSystemLinks" class="p-2 border rounded">
                            <!-- System-Verknüpfungen werden hier dynamisch eingefügt -->
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('cancel') ?></button>
                    <button type="submit" class="btn btn-primary"><?= t('save') ?></button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal für Benutzerdetails -->
<div class="modal fade" id="userDetailsModal" tabindex="-1" aria-labelledby="userDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="userDetailsModalLabel"><?= t('user_details') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="userDetailsContent">
                    <!-- Benutzerdetails werden hier dynamisch eingefügt -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('close') ?></button>
                <button type="button" class="btn btn-primary" id="editUserFromDetailsBtn" style="display: none;"><?= t('edit_user') ?></button>
            </div>
        </div>
    </div>
</div>

<!-- Modal für Kundendetails -->
<div class="modal fade" id="customerDetailsModal" tabindex="-1" aria-labelledby="customerDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customerDetailsModalLabel"><?= t('customer_details') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="customerDetailsContent">
                    <!-- Kundendetails werden hier dynamisch eingefügt -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('close') ?></button>
                <button type="button" class="btn btn-primary" id="editCustomerFromDetailsBtn" style="display: none;"><?= t('edit_customer') ?></button>
            </div>
        </div>
    </div>
</div>

<!-- Modal für Kunde erstellen -->
<div class="modal fade" id="createCustomerModal" tabindex="-1" aria-labelledby="createCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createCustomerModalLabel"><?= t('create_customer') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post">
                <input type="hidden" name="action" value="create_customer">
                <div class="modal-body">
                    <!-- Grundlegende Informationen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-person"></i> <?= t('basic_information') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerFirstName" class="form-label"><?= t('first_name') ?> *</label>
                            <input type="text" class="form-control" id="createCustomerFirstName" name="first_name" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerLastName" class="form-label"><?= t('last_name') ?> *</label>
                            <input type="text" class="form-control" id="createCustomerLastName" name="last_name" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerEmail" class="form-label"><?= t('email') ?> *</label>
                            <input type="email" class="form-control" id="createCustomerEmail" name="email" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerCompany" class="form-label"><?= t('company') ?></label>
                            <input type="text" class="form-control" id="createCustomerCompany" name="company">
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerPhone" class="form-label"><?= t('phone') ?></label>
                            <input type="tel" class="form-control" id="createCustomerPhone" name="phone">
                        </div>
                    </div>
                    
                    <!-- Adressinformationen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-geo-alt"></i> <?= t('address_information') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 mb-3">
                            <label for="createCustomerAddress" class="form-label"><?= t('address') ?></label>
                            <textarea class="form-control" id="createCustomerAddress" name="address" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="createCustomerCity" class="form-label"><?= t('city') ?></label>
                            <input type="text" class="form-control" id="createCustomerCity" name="city">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="createCustomerPostalCode" class="form-label"><?= t('postal_code') ?></label>
                            <input type="text" class="form-control" id="createCustomerPostalCode" name="postal_code">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="createCustomerCountry" class="form-label"><?= t('country') ?></label>
                            <input type="text" class="form-control" id="createCustomerCountry" name="country">
                        </div>
                    </div>
                    
                    <!-- Sicherheit und Status -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-shield-check"></i> <?= t('security_and_status') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerPassword" class="form-label"><?= t('password') ?> *</label>
                            <input type="password" class="form-control" id="createCustomerPassword" name="password" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerPasswordConfirm" class="form-label"><?= t('confirm_password') ?> *</label>
                            <input type="password" class="form-control" id="createCustomerPasswordConfirm" name="password_confirm" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="createCustomerStatus" class="form-label"><?= t('status') ?></label>
                            <select class="form-select" id="createCustomerStatus" name="status">
                                <option value="pending"><?= t('pending') ?></option>
                                <option value="active"><?= t('active') ?></option>
                                <option value="suspended"><?= t('suspended') ?></option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label"><?= t('email_verification') ?></label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="createCustomerEmailVerified" name="email_verified" value="1">
                                <label class="form-check-label" for="createCustomerEmailVerified">
                                    <?= t('email_verified') ?>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('cancel') ?></button>
                    <button type="submit" class="btn btn-success"><?= t('create_customer') ?></button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal für Kunde bearbeiten -->
<div class="modal fade" id="editCustomerModal" tabindex="-1" aria-labelledby="editCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editCustomerModalLabel"><?= t('edit_customer') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editCustomerForm">
                <input type="hidden" name="action" value="edit_customer">
                <input type="hidden" id="editCustomerId" name="customer_id">
                <div class="modal-body">
                    <!-- Grundlegende Informationen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-person"></i> <?= t('basic_information') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerFirstName" class="form-label"><?= t('first_name') ?> *</label>
                            <input type="text" class="form-control" id="editCustomerFirstName" name="first_name" required>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerLastName" class="form-label"><?= t('last_name') ?> *</label>
                            <input type="text" class="form-control" id="editCustomerLastName" name="last_name" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerFullName" class="form-label"><?= t('full_name') ?></label>
                            <input type="text" class="form-control" id="editCustomerFullName" name="full_name">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerEmail" class="form-label"><?= t('email') ?> *</label>
                            <input type="email" class="form-control" id="editCustomerEmail" name="email" required>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerCompany" class="form-label"><?= t('company') ?></label>
                            <input type="text" class="form-control" id="editCustomerCompany" name="company">
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerPhone" class="form-label"><?= t('phone') ?></label>
                            <input type="tel" class="form-control" id="editCustomerPhone" name="phone">
                        </div>
                    </div>
                    
                    <!-- Adressinformationen -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-geo-alt"></i> <?= t('address_information') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 mb-3">
                            <label for="editCustomerAddress" class="form-label"><?= t('address') ?></label>
                            <textarea class="form-control" id="editCustomerAddress" name="address" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4 mb-3">
                            <label for="editCustomerCity" class="form-label"><?= t('city') ?></label>
                            <input type="text" class="form-control" id="editCustomerCity" name="city">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="editCustomerPostalCode" class="form-label"><?= t('postal_code') ?></label>
                            <input type="text" class="form-control" id="editCustomerPostalCode" name="postal_code">
                        </div>
                        <div class="col-md-4 mb-3">
                            <label for="editCustomerCountry" class="form-label"><?= t('country') ?></label>
                            <input type="text" class="form-control" id="editCustomerCountry" name="country">
                        </div>
                    </div>
                    
                    <!-- Status und Sicherheit -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-shield-check"></i> <?= t('status_and_security') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerStatus" class="form-label"><?= t('status') ?></label>
                            <select class="form-select" id="editCustomerStatus" name="status">
                                <option value="pending"><?= t('pending') ?></option>
                                <option value="active"><?= t('active') ?></option>
                                <option value="suspended"><?= t('suspended') ?></option>
                                <option value="deleted"><?= t('deleted') ?></option>
                            </select>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerPassword" class="form-label"><?= t('new_password') ?> (<?= t('leave_empty_no_change') ?>)</label>
                            <input type="password" class="form-control" id="editCustomerPassword" name="password">
                        </div>
                    </div>
                    
                    <!-- Zeitstempel -->
                    <div class="row mb-4">
                        <div class="col-12">
                            <h6 class="text-primary border-bottom pb-2"><i class="bi bi-clock"></i> <?= t('timestamps') ?></h6>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerEmailVerifiedAt" class="form-label"><?= t('email_verified_at') ?></label>
                            <input type="datetime-local" class="form-control" id="editCustomerEmailVerifiedAt" name="email_verified_at" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerLastLogin" class="form-label"><?= t('last_login') ?></label>
                            <input type="datetime-local" class="form-control" id="editCustomerLastLogin" name="last_login" readonly>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerCreatedAt" class="form-label"><?= t('created_at') ?></label>
                            <input type="datetime-local" class="form-control" id="editCustomerCreatedAt" name="created_at" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label for="editCustomerUpdatedAt" class="form-label"><?= t('updated_at') ?></label>
                            <input type="datetime-local" class="form-control" id="editCustomerUpdatedAt" name="updated_at" readonly>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('cancel') ?></button>
                    <button type="submit" class="btn btn-primary"><?= t('save') ?></button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal für Benutzer löschen -->
<div class="modal fade" id="deleteUserModal" tabindex="-1" aria-labelledby="deleteUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteUserModalLabel"><?= t('delete_user') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteUserForm">
                <input type="hidden" name="action" value="delete_user">
                <input type="hidden" id="deleteUserId" name="user_id">
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                        <strong><?= t('attention') ?>:</strong> <?= t('you_are_deleting_the_user') ?> "<span id="deleteUsername"></span>".
                    </div>
                    <p><?= t('please_select_which_systems_the_user_should_be_deleted_from') ?>:</p>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteFromLocal" name="delete_from_systems[]" value="local" checked>
                        <label class="form-check-label" for="deleteFromLocal">
                            <?= t('local_user') ?> (<?= t('always_deleted') ?>)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteFromOGP" name="delete_from_systems[]" value="ogp">
                        <label class="form-check-label" for="deleteFromOGP">
                            <?= t('ogp_user') ?>
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteFromProxmox" name="delete_from_systems[]" value="proxmox">
                        <label class="form-check-label" for="deleteFromProxmox">
                            <?= t('proxmox_user') ?>
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteFromISPConfig" name="delete_from_systems[]" value="ispconfig">
                        <label class="form-check-label" for="deleteFromISPConfig">
                            <?= t('ispconfig_user') ?>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('cancel') ?></button>
                    <button type="submit" class="btn btn-danger"><?= t('delete') ?></button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal für Kunde löschen -->
<div class="modal fade" id="deleteCustomerModal" tabindex="-1" aria-labelledby="deleteCustomerModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteCustomerModalLabel"><?= t('delete_customer') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteCustomerForm">
                <input type="hidden" name="action" value="delete_customer">
                <input type="hidden" id="deleteCustomerId" name="customer_id">
                <div class="modal-body">
                    <div class="alert alert-warning">
                        <i class="bi bi-exclamation-triangle"></i>
                        <strong><?= t('attention') ?>:</strong> <?= t('use_delete_customers') ?>
                    </div>
                    <p><?= t('please_select_which_systems_the_customer_should_be_deleted_from') ?>:</p>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteCustomerFromLocal" name="delete_from_systems[]" value="local" checked>
                        <label class="form-check-label" for="deleteCustomerFromLocal">
                            <?= t('local_customer') ?> (<?= t('always_deleted') ?>)
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteCustomerFromOGP" name="delete_from_systems[]" value="ogp">
                        <label class="form-check-label" for="deleteCustomerFromOGP">
                            <?= t('ogp_customer') ?>
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteCustomerFromProxmox" name="delete_from_systems[]" value="proxmox">
                        <label class="form-check-label" for="deleteCustomerFromProxmox">
                            <?= t('proxmox_customer') ?>
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="deleteCustomerFromISPConfig" name="delete_from_systems[]" value="ispconfig">
                        <label class="form-check-label" for="deleteCustomerFromISPConfig">
                            <?= t('ispconfig_customer') ?>
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('cancel') ?></button>
                    <button type="submit" class="btn btn-danger"><?= t('delete') ?></button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal für Kundendetails -->
<div class="modal fade" id="customerDetailsModal" tabindex="-1" aria-labelledby="customerDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="customerDetailsModalLabel"><?= t('customer_details') ?></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="customerDetailsContent">
                <!-- Wird dynamisch geladen -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"><?= t('close') ?></button>
            </div>
        </div>
    </div>
</div>

<!-- JavaScript-Code wurde in assets/inc-js/users.js ausgelagert --> 